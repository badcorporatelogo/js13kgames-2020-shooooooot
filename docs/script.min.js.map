{"version":3,"file":"script.min.js","sources":["../src/js/world/dom.js","../src/js/settings/Colors.js","../src/js/settings/volume.js","../src/js/actions/Chain.js","../src/js/math/easing.js","../src/js/utility/array.js","../src/js/traits/ActionList.js","../src/js/sprites/Sprite.js","../src/js/sprites/TextSprite.js","../src/js/sprites/controls/GamepadControlsSprite.js","../src/js/sprites/controls/KeyboardControlsSprite.js","../src/js/world/input/MouseState.js","../src/js/world/input/KeyState.js","../src/js/world/RenderLayer.js","../src/js/world/layers/Intro.js","../src/js/sprites/BoxSprite.js","../src/js/world/layers/Background.js","../src/js/sprites/enemies/SpawnSprite.js","../src/js/sprites/ParticleBlastSprite.js","../src/js/sound/ZzFx.js","../src/js/sprites/enemies/EnemySprite.js","../src/js/sprites/enemies/HunterSprite.js","../src/js/sprites/enemies/AsteroidSprite.js","../src/js/sprites/enemies/SpiralSprite.js","../src/js/sprites/enemies/AmmoDropSprite.js","../src/js/math/vector2.js","../src/js/actions/TimedEvent.js","../src/js/world/layers/Simulation.js","../src/js/sprites/enemies/SeekerSprite.js","../src/js/sprites/CircleSprite.js","../src/js/sprites/BulletSprite.js","../src/js/sprites/PlayerSprite.js","../src/js/world/layers/Player.js","../src/js/world/layers/Hud.js","../src/js/world/layers/GameOver.js","../src/js/main.js","../src/js/world/World.js","../src/js/world/GameLoop.js"],"sourcesContent":["// Easy access to DOM elements defined in index.html\nexport const renderArea = document.getElementById('render-area');\n\nexport default {\n  createCanvas() {\n    return document.createElement('canvas');\n  }\n}\n\nexport function showCursor() {\n  renderArea.classList.remove('hidecursor');\n  renderArea.classList.add('showcursor');\n}\n\nexport function hideCursor() {\n  renderArea.classList.remove('showcursor');\n  renderArea.classList.add('hidecursor');\n}\n","// https://colorhunt.co/palette/191947\nconst palette191947 = [\n  '#111d5e',\n  '#c70039',\n  '#f37121',\n  '#ffbd69'\n];\n\n// https://colorhunt.co/palette/195741\nconst palette195741 = [\n  '#810000',\n  '#e97171',\n  '#ffcb8e',\n  '#f5efef'\n];\n\nconst palette = palette195741;\n\nconst Colors = {\n  background: palette[0],\n  obstacles: palette[1],\n  enemies: palette[2],\n  player: palette[3],\n}\n\nexport default Colors;\n","// global volume setting\nexport var volume = 0.1;\n\n// store volume while muted\nvar oldVolume = volume;\n\nexport function mute() {\n  oldVolume = volume;\n  volume = 0;\n}\n\nexport function unmute() {\n  volume = oldVolume;\n}\n","export default class Chain {\n  // s - scale\n  // f - function\n  // o - object\n  // p - property\n  // d - duration\n  constructor(s, f, o, p, d) {\n    this.s = s;\n    this.f = f;\n    this.o = o;\n    this.p = p;\n    this.d = d;\n    this.t = 0;\n    this.isStarted = false;\n    this.isDone = false;\n    this.parent = null; // set by Sprite.addAction\n  }\n\n  // t - elapsed time since last update\n  update(t) {\n    if (!this.isStarted) {\n      this.isStarted = true;\n      this.startValue = this.o[this.p] || 0;\n    } else if (!this.isDone) {\n      this.t += t/this.d;\n      let remainder = 0;\n      if (this.t > 1) {\n        remainder = this.t - 1;\n        this.t = 1;\n        this.isDone = true;\n      }\n      this.o[this.p] = this.startValue + this.s * this.f(this.t);\n      if (this.isDone && this.next) {\n        if (this.next !== this) {\n          this.parent.addAction(this.next);\n        }\n        this.next.start();\n        this.next.update(remainder);\n      }\n    }\n  }\n\n  // explicit start so we can skip the initial position\n  start() {\n    this.isStarted = false;\n    this.t = 0;\n    this.isDone = false;\n    this.update(0);\n  }\n\n  // enable: new Chain().then(new Chain()).then(new Chain())...\n  then(next) {\n    if (this.next) {\n      this.next.then(next);\n    } else {\n      this.next = next;\n    }\n    return this;\n  }\n}\n","// 1D normalized nonlinear transformations\n// Use values of t in [0, 1].\n\nexport function smoothStart2(t) { return t * t; }\nexport function smoothStart3(t) { return t * t * t; }\nexport function smoothStart4(t) { return t * t * t * t; }\nexport function smoothStart5(t) { return t * t * t * t * t; }\nexport function smoothStart6(t) { return t * t * t * t * t * t; }\n\nexport function smoothStop2(t) { return 1 - (1 - t) * (1 - t); }\nexport function smoothStop3(t) { return 1 - (1 - t) * (1 - t) * (1 - t); }\nexport function smoothStop4(t) { return 1 - (1 - t) * (1 - t) * (1 - t) * (1 - t); }\nexport function smoothStop5(t) { return 1 - (1 - t) * (1 - t) * (1 - t) * (1 - t) * (1 - t); }\nexport function smoothStop6(t) { return 1 - (1 - t) * (1 - t) * (1 - t) * (1 - t) * (1 - t) * (1 - t); }\n\n// Transformations (a and b are functions)\n\nexport function mix(a, b, weightB, t) { return (1 - weightB) * a(t) + weightB * b(t); }\n\nexport function crossfade(a, b, t) { return (1 - t) * a(t) + t * b(t); }\n\nexport function scale(a, t) { return t * a(t); }\n\nexport function reverseScale(a, t) { return (1 - t) * a(t); }\n\nexport function arch2(t) { return t * (1 - t); }\n\n// scale(arch2, t)\nexport function smoothStartArch3(t) { return t * t * (1 - t); }\n\n// reserseScale(arch2, t)\nexport function smoothStopArch3(t) { return t * (1 - t) * (1 - t); }\n\nexport function smoothStepArch4(t) { return reverseScale(t => scale(arch2, t), t); }\n\nexport function bellCurve6(t) { return smoothStop3(t) * smoothStop3(t); }\n\nexport function bounceClampBottom(t) { return Math.abs(t); }\nexport function bounceClampTop(t) { return 1 - Math.abs(1 - t); }\nexport function bounceClampBottomTop(t) { return bounceClampTop(bounceClampBottom(t)); }\n\n// Cubic (3rd) Bezier through A,B,C,D where A (start) and D (end) are assumed to be 0 and 1\nexport function normalizedBezier3(b, c, t) {\n  let s = 1 - t;\n  let t2 = t * t;\n  let s2 = s * s;\n  let t3 = t * t2;\n  return (3 * b * s2 * t) + (3 * c * s * t2) + t3;\n}\n","export function removeAll(array, predicate) {\n  let next = 0;\n  let last = 0;\n  let kept = 0;\n  for (let next = 0; next < array.length; ++next) {\n    if (predicate(array[next])) {\n    } else if (next > last) {\n      array[last++] = array[next];\n      ++kept;\n    } else {\n      ++last;\n      ++kept;\n    }\n  }\n  array.length = kept;\n}\n","import { removeAll } from '../utility/array'\n\nexport default function implementActionList(target) {\n  target.actions= [];\n  target.updateActions = updateActions;\n  target.addAction = addAction;\n  target.removeAction = removeAction;\n}\n\nfunction updateActions(t) {\n  let isDirty = false;\n  if (this.actions.length) {\n    for (const action of this.actions) {\n      action.update(t);\n    }\n    isDirty = true;\n  }\n  removeAll(this.actions, a => a.isDone);\n  return isDirty;\n}\n\nfunction addAction(action) {\n  this.actions.push(action);\n  action.parent = this;\n}\n\nfunction removeAction(action) {\n  removeAll(this.actions, a => a === action);\n  action.parent = null;\n}\n","import implementActionList from '../traits/ActionList'\n\nexport default class Sprite {\n  constructor() {\n    implementActionList(this);\n    this.dx = 0;\n    this.dy = 0;\n    this.context = null; // set by RenderLayer.addObject\n  }\n\n  update(t) {\n    let isDirty = this.updateActions(t);\n\n    if (this.dx || this.dy) {\n      this.x += this.dx;\n      this.y += this.dy;\n      isDirty = true;\n    }\n    return isDirty;\n  }\n\n  getLayer(name) {\n    return this.parent.getLayer(name);\n  }\n}\n","import Sprite from './Sprite'\n\nexport default class TextSprite extends Sprite {\n  constructor(text, x, y) {\n    super();\n    this.text = text;\n    this.x = x;\n    this.y = y;\n  }\n\n  setText(newText) {\n    if (this.text !== newText) {\n      this.text = newText;\n      this.isDirty = true;\n    }\n  }\n\n  update(t) {\n    return super.update(t) || this.isDirty;\n  }\n\n  draw() {\n    this.context.fillText(this.text, this.x, this.y);\n    this.isDirty = false;\n  }\n}\n","import Sprite from '../Sprite'\nimport Colors from '../../settings/Colors'\n\nconst lineWidth = 36;\nconst size = 64;\nconst height = size*2/3;\nconst width = size;\nconst startAngle = 0, endAngle = 2 * Math.PI;\n\nexport default class GamepadControlsSprite extends Sprite {\n  constructor(x, y, scale = 1) {\n    super();\n    this.x = x;\n    this.y = y + lineWidth;\n  }\n\n  drawThumbStick(x, y, radius) {\n    const ctx = this.context;\n    ctx.beginPath();\n    ctx.arc(x, y, radius, startAngle, endAngle);\n    ctx.fill();\n  }\n\n  draw() {\n    const ctx = this.context;\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.lineCap = 'round';\n    ctx.fillStyle = Colors.background;\n    ctx.beginPath();\n    ctx.moveTo(this.x, this.y + height);\n    ctx.lineTo(this.x + width/5, this.y);\n    ctx.moveTo(this.x + width/5, this.y+height/5);\n    ctx.rect(this.x + width/5, this.y+height/5, width*3/5, height/5);\n    ctx.moveTo(this.x + width*4/5, this.y);\n    ctx.lineTo(this.x + width, this.y + height);\n    ctx.stroke();\n    this.drawThumbStick(this.x + width/5, this.y + height*2/5 ,lineWidth/4);\n    this.drawThumbStick(this.x + width*4/5, this.y + height*2/5 ,lineWidth/4);\n    this.context.restore();\n\n    this.context.save();\n    this.context.fillStyle = this.context.strokeStyle;\n    this.context.font = '24px verdana';\n    this.context.textAlign = 'left';\n    this.context.fillText('Gamepad', this.x - 30, this.y - 48);\n    this.context.restore();\n  }\n}\n","import Sprite from '../Sprite'\n\nconst size = 300;\n\nexport default class KeyboardControlsSprite extends Sprite {\n  constructor(x, y, scale = 1) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.width = size * scale;\n    this.keySize = this.width / 20;\n    this.keySpacing = this.keySize * 1.1;\n    this.height = this.keySpacing * 6;\n  }\n\n  drawKey(x, y, r, c) {\n    const keySize = this.keySize;\n    const keySpacing = this.keySize * 1.1;\n    this.context.strokeRect(x + c * keySpacing, y + r * keySpacing, keySize, keySize);\n  }\n\n  drawKeys(x, y) {\n    this.drawKey(x, y, 0, 1);\n    for (let c = 0; c < 3; ++c) {\n      this.drawKey(x, y, 1, c);\n    }\n  }\n\n  drawMouse() {\n    const ctx = this.context;\n    const radius = this.keySize * 1.5;\n    const x = this.x + this.width + this.keySize * 5;\n    const y = this.y + radius;\n    const top = y + radius;\n    const bottom = y + radius * 2;\n    const left = x - radius;\n    const right = x + radius;\n\n    ctx.beginPath();\n    ctx.arc(x, bottom, radius, 0, Math.PI);\n    ctx.arc(x, top, radius, Math.PI, Math.PI*2);\n    ctx.lineTo(left, top);\n    ctx.moveTo(x, top - radius);\n    ctx.lineTo(x, top);\n    ctx.moveTo(right, top);\n    ctx.lineTo(right, bottom);\n    ctx.stroke();\n  }\n\n  draw() {\n    this.context.strokeRect(this.x, this.y, this.width, this.height);\n    this.drawKeys(this.x + this.keySpacing*2, this.y + this.keySpacing);\n    this.drawKeys(this.x + this.width - this.keySpacing*5, this.y + this.height - this.keySpacing * 3);\n    this.drawMouse();\n\n    this.context.save();\n    this.context.fillStyle = this.context.strokeStyle;\n    this.context.font = '24px verdana';\n    this.context.textAlign = 'left';\n    this.context.fillText('Keyboard and Mouse', this.x + 50, this.y - 24);\n    this.context.restore();\n  }\n}\n","// Mouse States:\n// - Out: Start state. Off-element or unknown.\n// - Moving: Tracks position.\n// - Dragging: Tracks position with button down.\nconst OutState = 'Out';\nconst MovingState = 'Moving';\nconst DraggingState = 'Dragging';\n\n// Mouse up/down event.which identifies a button by numeral.\nconst LeftMouseButton = 1;\n\nexport default class MouseState {\n  constructor(canvas) {\n    // We need to translate between client space and canvas space, and that\n    // requires the current dimensions of the canvas (in case of resize).\n    this.canvas = canvas;\n\n    // Input events we care about.\n    canvas.addEventListener('mousedown', this.onMouseDown.bind(this), false);\n    canvas.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n    canvas.addEventListener('mouseout', this.onMouseOut.bind(this), false);\n    canvas.addEventListener('mouseup', this.onMouseUp.bind(this), false);\n\n    this.state = OutState;\n    this.isMouseDown = false;\n    this.isMouseOver = false;\n    this.current = {};\n    this.dragging = null;\n    this.dragComplete = null;\n  }\n\n  clientToCanvas(e, position = {}) {\n    const canvas = this.canvas;\n    position.x = e.offsetX * canvas.width / canvas.clientWidth;\n    position.y = e.offsetY * canvas.height / canvas.clientHeight;\n    return position;\n  }\n\n  updateCurrent(e) {\n    this.clientToCanvas(e, this.current);\n  }\n\n  log(e) {\n    // console.log(`${e.type} at (${e.offsetX}, ${e.offsetY})`);\n  }\n\n  reset() {\n    this.isMouseOver = false;\n    this.isMouseDown = false;\n    this.current = {};\n    this.dragging = null;\n    this.dragComplete = null;\n  }\n\n  drop() {\n    const drop = this.dragComplete;\n    this.dragComplete = null;\n    return drop;\n  }\n\n  onMouseEvent(e) {\n    this.log(e);\n    this.isMouseOver = true;\n    this.updateCurrent(e);\n  }\n\n  onMouseMove(e) {\n    this.onMouseEvent(e);\n\n    this.state = MovingState;\n  }\n\n  onMouseOut(e) {\n    this.onMouseEvent(e);\n    this.reset();\n\n    this.state = OutState;\n  }\n\n  onBeginDrag(e) {\n    this.dragging = {\n      begin: this.clientToCanvas(e),\n      end: this.current // <-- reference\n    };\n  }\n\n  onEndDrag(e) {\n    this.dragging.end = this.clientToCanvas(e);\n    this.dragComplete = this.dragging;\n    this.dragging = null;\n  }\n\n  onMouseDown(e) {\n    this.onMouseEvent(e);\n    // Look at the old state to deal with weird things like starting the game\n    // with the button pressed, or entering the canvas with button pressed.\n    const alreadyDown = this.isMouseDown;\n    const becameDown = (e.which === LeftMouseButton);\n    if (!alreadyDown && becameDown) {\n      // Begin drag\n      this.isMouseDown = true;\n      this.onBeginDrag(e);\n\n      this.state = DraggingState;\n    } else if (this.state === OutState) {\n      this.state = MovingState;\n    }\n  }\n\n  onMouseUp(e) {\n    this.onMouseEvent(e);\n    // Look at the old state to deal with weird things like starting the game\n    // with the button pressed, or entering the canvas with button pressed.\n    const alreadyDown = this.isMouseDown;\n    const becameUp = (e.which === LeftMouseButton);\n    if (alreadyDown && becameUp) {\n      this.isMouseDown = false;\n      this.onEndDrag(e);\n\n      this.state = MovingState;\n    } else if (this.state === OutState) {\n      this.state = MovingState;\n    }\n  }\n}\n","export const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const [\n  KEY_ZERO,\n  KEY_ONE,\n  KEY_TWO,\n  KEY_THREE,\n  KEY_FOUR,\n  KEY_FIVE,\n  KEY_SIX,\n  KEY_SEVEN,\n  KEY_EIGHT,\n  KEY_NINE\n] = [ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 ];\n\nexport const KEY_BACKSPACE = 8;\nexport const KEY_ESCAPE = 27;\nexport const KEY_SPACE = 32;\nexport const KEY_ENTER = 13;\n\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\n\nexport const KEY_LEFT_META = 91;\nexport const KEY_RIGHT_META = 93;\n\nexport const [\n  KEY_A,\n  KEY_C,\n  KEY_D,\n  KEY_S,\n  KEY_V,\n  KEY_W,\n  KEY_Y,\n  KEY_Z\n] = [ 65, 67, 68, 83, 86, 87, 89, 90 ];\n\n// Special meta keys\nexport const [\n  KEY_COPY,\n  KEY_PASTE,\n  KEY_REDO,\n  KEY_UNDO,\n] = [ 467, 486, 489, 490 ];\n\nexport default class KeyState {\n  constructor(window) {\n    window.addEventListener('keydown', this.onKeyDown.bind(this), false);\n    window.addEventListener('keyup', this.onKeyUp.bind(this), false);\n\n    // this.numKeysDown = 0;\n    this.newKeysDown = {};\n    this.keysDown = {};\n    this.newKeysUp = {};\n  }\n\n  reset() {\n    for (let key in this.newKeysDown) {\n      this.newKeysDown[key] = undefined;\n    }\n    for (let key in this.newKeysUp) {\n      this.newKeysUp[key] = undefined;\n    }\n  }\n\n  onKeyDown(e) {\n    let code = e.keyCode;\n    if (e.metaKey) {\n      code += 400;\n    }\n    this.newKeysDown[code] = code;\n    this.keysDown[code] = code;\n    // Uncomment this to log key codes.\n    // console.log(`keyCode: ${e.keyCode}, key: '${e.key}'`);\n  }\n\n  onKeyUp(e) {\n    let code = e.keyCode;\n    if (e.metaKey) {\n      code += 400;\n    }\n    this.newKeysUp[code] = code;\n    this.keysDown[code] = undefined;\n  }\n\n  isKeyDown(keyCode) {\n    return (this.keysDown[keyCode] === keyCode);\n  }\n\n  isKeyUp(keyCode) {\n    return (this.keysDown[keyCode] !== keyCode);\n  }\n}\n","import dom from './dom'\nimport { renderArea } from './dom'\nimport { removeAll } from '../utility/array'\n\nexport default class RenderLayer {\n  constructor(name, layer) {\n    // Higher number layers cover lower number layers.\n    this.z = layer;\n    this.name = name;\n    const canvas = this.canvas = dom.createCanvas();\n    canvas.id = name;\n    canvas.width = 1920;\n    canvas.height = 1080;\n    canvas.style = `z-index: ${layer}`;\n    this.context = canvas.getContext(\"2d\");\n    this.objects = [];\n    this.isDirty = true;\n    renderArea.appendChild(canvas);\n  }\n\n  getLayer(name) {\n    return this.parent.layer[name];\n  }\n\n  addObject(o) {\n    o.parent = this;\n    o.context = this.context;\n    if (typeof o.z !== 'number') {\n      o.z = 0;\n    }\n    this.objects.push(o);\n    this.isObjectListDirty = true;\n  }\n\n  removeObject(o) {\n    removeAll(this.objects, e => e === o);\n    o.parent = null;\n    o.context = null;\n  }\n\n  clear() {\n    // This will always clear the full canvas.\n    const ctx = this.context;\n    const canvas = this.canvas;\n    let storedTransform = ctx.getTransform();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.setTransform(storedTransform);\n  }\n\n  update(t) {\n    for (const object of this.objects) {\n      const updated = object.update(t);\n      this.isDirty = updated || this.isDirty;\n    }\n    if (this.isObjectListDirty) {\n      // Lower z-order is updated/rendered first. Higher z-order\n      // things will cover lower z-order things.\n      this.objects.sort((a, b) => (a.z - b.z));\n      this.isObjectListDirty = false;\n    }\n  }\n\n  draw() {\n    if (this.isDirty) {\n      this.clear();\n      for (const object of this.objects) {\n        object.draw();\n      }\n      this.isDirty = false;\n    }\n  }\n\n  dispose() {\n    renderArea.removeChild(this.canvas);\n  }\n}\n","import Chain from '../../actions/Chain'\nimport { smoothStop4 } from '../../math/easing'\nimport implementActionList from '../../traits/ActionList'\nimport Colors from '../../settings/Colors'\nimport TextSprite from '../../sprites/TextSprite'\nimport GamepadControlsSprite from '../../sprites/controls/GamepadControlsSprite'\nimport KeyboardControlsSprite from '../../sprites/controls/KeyboardControlsSprite'\nimport MouseState from '../input/MouseState'\nimport KeyState from '../input/KeyState'\nimport { KEY_ENTER } from '../input/KeyState'\nimport RenderLayer from '../RenderLayer'\n\nconst workingTitle = 'Shooooooot!!';\nconst infoText = [\n  'avoid being hit',\n  'point to shoot',\n  'max ammo: 404',\n];\nconst titleFont = '128px verdana';\nconst titleHeight = 128 * 1.25;\nconst textFont = '64px verdana';\nconst textHeight = 64 * 1.25;\nconst startText = 'Click or Press Enter to Start';\n\nexport default class Intro extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n    implementActionList(this);\n\n    this.context.strokeStyle = Colors.enemies;\n    this.context.fillStyle = Colors.player;\n    this.context.lineWidth = 8;\n    this.context.font = textFont;\n    this.context.textAlign = 'center';\n\n    this.titleEase = 0;\n\n    this.addAction(new Chain(1, smoothStop4, this, 'titleEase', .75));\n\n    this.addObject(new KeyboardControlsSprite(100, 100));\n    this.addObject(new GamepadControlsSprite(this.canvas.width - 300, 100));\n    this.keys = new KeyState(window);\n    this.mouse = new MouseState(this.canvas);\n  }\n\n  // Fill background\n  clear() {\n    const ctx = this.context;\n    const canvas = ctx.canvas;\n    let x = canvas.width / 2;\n    let y = canvas.height / 2;\n    ctx.save();\n    const gradient = ctx.createRadialGradient(x, y, canvas.height / 2, x, y, canvas.height * 4/3);\n    gradient.addColorStop(0, Colors.background);\n    gradient.addColorStop(1, Colors.obstacles);\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n    return this;\n  }\n\n  renderTitle() {\n    const ctx = this.context;\n    const canvas = ctx.canvas;\n    let x = canvas.width / 2;\n    let y = canvas.height / 2;\n    let yOffset = canvas.height * 1/10;\n\n    ctx.save();\n    ctx.font = titleFont;\n    if (Math.random() > 0.9) {\n      ctx.shadowBlur = 16;\n      ctx.shadowOffsetX = Math.round(Math.random() * 16 - 8);\n      ctx.shadowOffsetY = Math.round(Math.random() * 16 - 8);\n      ctx.shadowColor = ctx.fillStyle;\n    }\n    ctx.fillText(workingTitle, x, this.titleEase * y - yOffset);\n    ctx.restore();\n  }\n\n  renderInfoText() {\n    const ctx = this.context;\n    const canvas = ctx.canvas;\n    let centerX = canvas.width / 2;\n    let centerY = canvas.height / 2;\n\n    for (let i in infoText) {\n      const t = infoText[i];\n      const x = this.titleEase * centerX;\n      const y = centerY + (i * textHeight);\n      ctx.fillText(t, x, y);\n    }\n  }\n\n  renderNext() {\n    const ctx = this.context;\n    const canvas = ctx.canvas;\n    let centerX = canvas.width / 2;\n    let centerY = canvas.height / 2;\n    let n = infoText.length + 3;\n\n    const x = centerX + (1-this.titleEase) * centerX * 2;\n    const y = centerY + (n * textHeight);\n\n    const savedFill = ctx.fillStyle;\n    const savedStroke = ctx.strokeStyle;\n    ctx.fillStyle = Colors.enemies;\n    ctx.strokeStyle = Colors.enemies;\n    ctx.fillText(startText, x, y);\n    const height = textHeight * 1.1;\n    const width = ctx.measureText(startText).width * 1.1;\n    ctx.strokeRect(x - width / 2, y - height * 0.8, width, height);\n    ctx.fillStyle = savedFill;\n    ctx.strokeStyle = savedStroke;\n  }\n\n  update(t) {\n    super.update(t);\n    this.updateActions(t);\n    if (this.keys.isKeyDown(KEY_ENTER)) {\n      this.parent.start();\n    } else if (this.mouse.isMouseDown) {\n      this.parent.start();\n    }\n    this.isDirty = true;\n  }\n\n  draw() {\n    super.draw();\n    this.renderTitle();\n    this.renderInfoText();\n    this.renderNext();\n  }\n}\n","import Sprite from './Sprite'\n\nexport default class BoxSprite extends Sprite {\n  constructor(x, y, width, height) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  draw() {\n    this.context.strokeRect(this.x, this.y, this.width, this.height);\n  }\n}\n","import Colors from '../../settings/Colors'\nimport RenderLayer from '../RenderLayer'\nimport BoxSprite from '../../sprites/BoxSprite'\n\nconst width = 6;\nconst halfWidth = width / 2;\n\nexport default class Background extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n\n    this.context.strokeStyle = Colors.obstacles;\n    this.context.fillStyle = Colors.obstacles;\n    this.context.lineWidth = width;\n\n    this.addObject(new BoxSprite(halfWidth, halfWidth, this.canvas.width - width, this.canvas.height - width));\n  }\n\n  update(t) {\n    this.checkForBoundaryCollisions();\n    return super.update(t);\n  }\n\n  checkForBoundaryCollisions() {\n    const enemies = this.getLayer('simulation').enemies;\n    const player = this.getLayer('player').player;\n\n    if (this.collidesWithBoundary(player)) {\n      player.explode();\n    }\n    for (const e of enemies) {\n      if (this.collidesWithBoundary(e)) {\n        e.explode();\n      }\n    }\n  }\n\n  aabb() {\n    return {\n      left: halfWidth,\n      top: halfWidth,\n      right: this.canvas.width - width,\n      bottom: this.canvas.height - width,\n    };\n  }\n\n  collidesWithBoundary(s) {\n    const left = halfWidth, top = halfWidth, right = this.canvas.width - width, bottom = this.canvas.height - width;\n    const distance = [\n      s.x - left,\n      right - s.x,\n      s.y - top,\n      bottom - s.y\n    ];\n    for (const d of distance) {\n      if (d < s.radius) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import Sprite from '../Sprite'\nimport Chain from '../../actions/Chain'\nimport { smoothStop4 } from '../../math/easing'\n\n// Number of particles\nconst min = 15;\nconst max = 25;\nconst size = 8;\nconst maxDistance = 300;\nconst duration = 1;\n\nexport default class SpawnSprite extends Sprite {\n  constructor(x, y, enemy) {\n    super();\n    this.x = x + enemy.radius;\n    this.y = y + enemy.radius;\n    this.enemy = enemy;\n    const n = Math.floor(Math.random() * (1 + max - min)) + min;\n    this.particles = new Array(n);\n    for (let i = 0; i < n; ++i) {\n      const angle = Math.random() * Math.PI * 2;\n      this.particles[i] = {\n        length: Math.floor(Math.random() * maxDistance),\n        angle: angle,\n      };\n    }\n    this.duration = duration;\n    this.factor = 0;\n    this.countDown = new Chain(1, smoothStop4, this, 'factor', duration);\n    this.addAction(this.countDown);\n  }\n\n  update(t) {\n    let updated = super.update(t);\n    for (const p of this.particles) {\n      p.x = Math.cos(p.angle) * p.length * (1 - this.factor) + this.x;\n      p.y = Math.sin(p.angle) * p.length * (1 - this.factor) + this.y;\n    }\n    if (this.factor >= 1) {\n      this.parent.addEnemy(this.enemy);\n      this.parent.removeObject(this);\n    }\n    return updated;\n  }\n\n  draw() {\n    for (const p of this.particles) {\n        this.context.fillRect(p.x, p.y, size, size);\n    }\n  }\n}\n","import Sprite from './Sprite'\n\n// Number of particles\nconst min = 15;\nconst max = 25;\nconst size = 5;\nconst minTTL = 0.33;\nconst maxTTL = 1.0;\nconst minSpeed = 8;\nconst maxSpeed = 20;\n\nexport default class ParticleBlastSprite extends Sprite {\n  constructor(x, y, innerRadius, outerRadius) {\n    super();\n    const n = Math.floor(Math.random() * (1 + max - min)) + min;\n    this.particles = new Array(n);\n    const diameter = innerRadius + innerRadius;\n    const left = x - innerRadius;\n    const top = y - innerRadius;\n    for (let i = 0; i < n; ++i) {\n      const angle = Math.random() * Math.PI * 2;\n      const speed = Math.floor(Math.random() * (maxSpeed - minSpeed)) + minSpeed;\n      this.particles[i] = {\n        x: Math.floor(Math.random() * diameter) + left,\n        y: Math.floor(Math.random() * diameter) + top,\n        angle: angle,\n        dx: Math.cos(angle) * speed,\n        dy: Math.sin(angle) * speed,\n        ttl: Math.random() * (maxTTL - minTTL) + minTTL,\n      };\n    }\n  }\n\n  update(t) {\n    let anyAlive = false;\n    for (const p of this.particles) {\n      p.x += p.dx;\n      p.y += p.dy;\n      p.ttl -= t;\n      anyAlive = (p.ttl >=0) || anyAlive;\n    }\n    if (!anyAlive) {\n      this.parent.removeObject(this);\n    }\n    return true;\n  }\n\n  draw() {\n    for (const p of this.particles) {\n      if (p.ttl >= 0) {\n        this.context.fillRect(p.x, p.y, size, size);\n      }\n    }\n  }\n}\n","// ZzFX - Zuper Zmall Zound Zynth - Micro Edition\n// MIT License - Copyright 2019 Frank Force\n// https://github.com/KilledByAPixel/ZzFX\n\n// This is a tiny build of zzfx with only a zzfx function to play sounds.\n// You can use zzfxV to set volume.\n// There is a small bit of optional code to improve compatibility.\n// Feel free to minify it further for your own needs!\n\n// Create randomized sounds here:\n// https://killedbyapixel.github.io/ZzFX/\n\nimport { volume as zzfxV } from '../settings/volume'\nconst zzfxR = 44100 // sample rate\n\nexport default function zzfxInit() {\n  var AudioContext = window.AudioContext || window.webkitAudioContext;\n  const zzfxX = new AudioContext()\n\n  // ZzFXMicro - Zuper Zmall Zound Zynth\n  return (q = 1, k = .05, c = 220, e = 0, t = 0, u = .1, r = 0, F = 1, v = 0, z = 0, w = 0, A = 0, l = 0, B = 0, x = 0, G = 0, d = 0, y = 1, m = 0, C = 0) => {\n      let b = 2 * Math.PI,\n        H = v *= 500 * b / zzfxR ** 2,\n        I = (0 < x ? 1 : -1) * b / 4,\n        D = c *= (1 + 2 * k * Math.random() - k) * b / zzfxR,\n        Z = [],\n        g = 0,\n        E = 0,\n        a = 0,\n        n = 1,\n        J = 0,\n        K = 0,\n        f = 0,\n        p, h;\n      e = 99 + zzfxR * e;\n      m *= zzfxR;\n      t *= zzfxR;\n      u *= zzfxR;\n      d *= zzfxR;\n      z *= 500 * b / zzfxR ** 3;\n      x *= b / zzfxR;\n      w *= b / zzfxR;\n      A *= zzfxR;\n      l = zzfxR * l | 0;\n      for (h = e + m + t + u + d | 0; a < h; Z[a++] = f) ++K % (100 * G | 0) || (f = r ? 1 < r ? 2 < r ? 3 < r ? Math.sin((g % b) ** 3) : Math.max(Math.min(Math.tan(g), 1), -1) : 1 - (2 * g / b % 2 + 2) % 2 : 1 - 4 * Math.abs(Math.round(g / b) - g / b) : Math.sin(g), f = (l ? 1 - C + C * Math.sin(2 * Math.PI * a / l) : 1) * (0 < f ? 1 : -1) * Math.abs(f) ** F * q * zzfxV * (a < e ? a / e : a < e + m ? 1 - (a - e) / m * (1 - y) : a < e + m + t ? y : a < h - d ? (h - a - d) / u * y : 0), f = d ? f / 2 + (d > a ? 0 : (a < h - d ? 1 : (h - a) / d) * Z[a - d | 0] / 2) : f), p = (c += v += z) * Math.sin(E * x - I), g += p - p * B * (1 - 1E9 * (Math.sin(a) + 1) % 2), E += p - p * B * (1 - 1E9 * (Math.sin(a) ** 2 + 1) % 2), n && ++n > A && (c += w, D += w, n = 0), !l || ++J % l || (c = D, v = H, n = n || 1);\n      q = zzfxX.createBuffer(1, h, zzfxR);\n      q.getChannelData(0).set(Z);\n      c = zzfxX.createBufferSource();\n      c.buffer = q;\n      c.connect(zzfxX.destination);\n      c.start();\n      return c\n    }\n}\n","import Sprite from '../Sprite'\nimport ParticleBlastSprite from '../ParticleBlastSprite'\nimport { removeAll } from '../../utility/array'\nimport zzfxInit from '../../sound/ZzFx'\n\nconst size = 30;\nconst speed = 3;\n\nlet zzfx;\n\nexport default class EnemySprite extends Sprite {\n  constructor(x, y, radius) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this._center = { x, y };\n    this.pointValue = 10;\n    // this.parent set by layer\n    // this.exploded set when exploded\n    if (!zzfx) {\n      zzfx = zzfxInit();\n    }\n  }\n\n  center() {\n    this._center.x = this.x;\n    this._center.y = this.y;\n    return this._center;\n  }\n\n  explode() {\n    if (!this.exploded) {\n      this.parent.addObject(new ParticleBlastSprite(this.x, this.y, this.radius, this.radius * 5));\n      this.incrementScore();\n      this.parent.removeEnemy(this);\n\n      zzfx(1,.05,240,0,.1,.43,2,1.29,3.2,0,0,0,0,1.7,.5,.5,.1,.55,.08,.27); // Hit 93\n    }\n    this.exploded = true;\n  }\n\n  incrementScore() {\n    const player = this.getPlayer();\n    if (!player.exploded) {\n      this.getHud().addScore(this.pointValue);\n    }\n  }\n\n  getPlayer() {\n    return this.getLayer('player').player;\n  }\n\n  getHud() {\n    return this.getLayer('hud');\n  }\n}\n","import EnemySprite from './EnemySprite'\n\nconst size = 25;\nconst speed = 5;\nconst drawWidth = 9;\nconst halfRepelAngle = Math.PI / 6;\n\nexport default class HunterSprite extends EnemySprite {\n  constructor(x, y) {\n    super(x, y, size / 2);\n    x -= size / 2;\n    y -= size / 2;\n    this.x = x;\n    this.y = y;\n    this.width = size;\n    this.height = size;\n    this.pointValue = 15;\n  }\n\n  center() {\n    this._center.x = this.x + size/2;\n    this._center.y = this.y + size/2;\n    return this._center;\n  }\n\n  update(t) {\n    const player = this.getPlayer();\n    if (player) {\n      const playerPosition = player.center();\n      const myPosition = this.center();\n\n      const dx = playerPosition.x - myPosition.x;\n      const dy = playerPosition.y - myPosition.y;\n      if (Math.abs(dx) < speed && Math.abs(dy) < speed) {\n        this.dx = 0;\n        this.dy = 0;\n      } else {\n        let angle = Math.atan2(dy, dx);\n        // when repulsing, make them go faster so the player doesn't crash.\n        let reverseSpeed = 0;\n        // Reverse direction if the player is coming at us.\n        if (this.inRepelArc(angle, player)) {\n          const deviation = Math.random() * (Math.PI / 2) - (Math.PI / 4);\n          angle = fixAngle(angle + Math.PI + deviation);\n          reverseSpeed = 3;\n        }\n        this.dx = Math.cos(angle) * (speed + reverseSpeed);\n        this.dy = Math.sin(angle) * (speed + reverseSpeed);\n      }\n    }\n\n    return super.update(t);\n  }\n\n  inRepelArc(angle, player) {\n    const angleFromPlayer = fixAngle(angle + Math.PI);\n    const playerAngle = fixAngle(player.angle);\n\n    let min = playerAngle - halfRepelAngle;\n    let max = playerAngle + halfRepelAngle;\n\n    if (min < 0) {\n      min += twoPi;\n      return ((angleFromPlayer <= max) && (angleFromPlayer >= 0) || ((angleFromPlayer >= min) && (angleFromPlayer <= twoPi)));\n    } else if (max > twoPi) {\n      max -= twoPi;\n      return ((angleFromPlayer <= max) && (angleFromPlayer >= 0) || ((angleFromPlayer >= min) && (angleFromPlayer <= twoPi)));\n    }\n    return ((angleFromPlayer <= max) && (angleFromPlayer >= min));\n  }\n\n  draw() {\n    const lineWidth = this.context.lineWidth;\n    this.context.lineWidth = drawWidth;\n    this.context.strokeRect(this.x, this.y, this.width, this.height);\n    this.context.lineWidth = lineWidth;\n  }\n}\n\nconst twoPi = Math.PI * 2;\n\n// Return an angle between 0 and twoPi.\nfunction fixAngle(a) {\n  while (a > twoPi) { a -= twoPi; }\n  if (a < 0) { a += twoPi; }\n  return a;\n}\n","import EnemySprite from './EnemySprite'\n\nconst size = 45;\nconst speed = 7;\nconst hitLimit = 3;\n\nexport default class AsteroidSprite extends EnemySprite {\n  constructor(x, y) {\n    super(x, y, size / 2);\n    this.originalRadius = this.radius;\n    this.width = size;\n    this.height = size;\n    const angle = this.angle = Math.random() * 2 * Math.PI;\n    this.dx = Math.cos(angle) * speed;\n    this.dy = Math.sin(angle) * speed;\n    this.hits = 0;\n  }\n\n  getBoundaryBox() {\n    return this.parent.getLayer('background').aabb();\n  }\n\n  setDirection(angle) {\n    this.angle = angle;\n    this.dx = Math.cos(angle) * speed;\n    this.dy = Math.sin(angle) * speed;\n  }\n\n  update(t) {\n    let isDirty = super.update(t);\n    const limit = 40;\n    let bounce = false;\n\n    const canvas = this.context.canvas;\n    const { left, right, top, bottom } = this.getBoundaryBox();\n    const x = this.x;\n    const y = this.y;\n    const radius = this.radius;\n\n    if (x - left < radius) {\n      bounce = true;\n      this.x = (left + radius) + (left + radius) - x;\n      this.dx = -this.dx;\n    } else if (right - x < radius) {\n      bounce = true;\n      this.x = (right - radius) + (right - radius) - x;\n      this.dx = -this.dx;\n    } else if (y - top < radius) {\n      bounce = true;\n      const beyond = (top + radius) - y;\n      this.y = (top + radius) + (top + radius) - y;\n      this.dy = -this.dy;\n    } else if (bottom - y < radius) {\n      bounce = true;\n      const beyond = y - (bottom - radius);\n      this.y = (bottom - radius) + (bottom - radius) - y;\n      this.dy = -this.dy;\n    }\n    if (bounce) {\n      this.angle = Math.atan2(this.dy, this.dx);\n    }\n    return isDirty;\n  }\n\n  draw() {\n    const ctx = this.context;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, 2*Math.PI);\n    ctx.fill();\n  }\n\n  explode() {\n    ++this.hits;\n    this.radius = this.originalRadius * (hitLimit)/(hitLimit+this.hits);\n    if (this.hits >= hitLimit) {\n      super.explode();\n    }\n  }\n}\n","import EnemySprite from './EnemySprite'\nimport Chain from '../../actions/Chain'\nimport { smoothStart3, smoothStop3 } from '../../math/easing'\n\nconst size = 26;\nconst speed = 2;\nconst maxRadius = 100;\nconst minRadius = 50;\nconst startAngle = 0, endAngle = 2 * Math.PI;\n\nexport default class SpiralSprite extends EnemySprite {\n  constructor(x, y) {\n    super(x, y, size / 2);\n    x -= size / 2;\n    y -= size / 2;\n    this.x = x;\n    this.y = y;\n    this.spinX = x;\n    this.spinY = y;\n    this.width = size;\n    this.height = size;\n    this.spiralRadiusEase = 0;\n    this.spiralAngleEase = 0;\n    this.spiralAngle = Math.random() * 2 * Math.PI;\n    this.spinDirection = Math.round(Math.random()) ? -1 : 1;\n    const spiralGrowth = new Chain(1, smoothStart3, this, 'spiralRadiusEase', 1 + Math.random());\n    const spiralShrink = new Chain(-1, smoothStop3, this, 'spiralRadiusEase', 1 + Math.random());\n    this.addAction(spiralGrowth.then(spiralShrink).then(spiralGrowth));\n  }\n\n  center() {\n    this._center.x = this.x + size/2;\n    this._center.y = this.y + size/2;\n    return this._center;\n  }\n\n  update(t) {\n    this.spiralAngleEase += (this.spinDirection*t);\n    let isDirty = super.update(t);\n\n    // Move toward the player\n    const player = this.getPlayer();\n    if (player) {\n      const playerPosition = player.center();\n      const dx = playerPosition.x - this.spinX;\n      const dy = playerPosition.y - this.spinY;\n      if (Math.abs(dx) < speed && Math.abs(dy) < speed) {\n        this.dx = 0;\n        this.dy = 0;\n      } else {\n        const angle = Math.atan2(dy, dx);\n        this.dx = Math.cos(angle) * speed;\n        this.dy = Math.sin(angle) * speed;\n      }\n    }\n    this.spinX += this.dx;\n    this.spinY += this.dy;\n\n    // Spin around \"my location\"\n    const angle = this.spiralAngle + this.spiralAngleEase * 2 * Math.PI;\n    const radius = (0.5 + this.spiralRadiusEase) * maxRadius;\n    let x = this.spinX + Math.cos(angle) * radius;\n    let y = this.spinY + Math.sin(angle) * radius;\n\n    this.x = x //+ this.dx;\n    this.y = y //+ this.dy;\n\n    return isDirty || true;\n  }\n\n  draw() {\n    const c = this;\n    const ctx = this.context;\n    ctx.beginPath();\n    ctx.arc(c.x, c.y, c.radius, startAngle, endAngle);\n    ctx.stroke();\n  }\n}\n","import EnemySprite from './EnemySprite'\nimport Chain from '../../actions/Chain'\nimport { smoothStart4 } from '../../math/easing'\nimport Colors from '../../settings/Colors'\nimport zzfxInit from '../../sound/ZzFx'\n\nconst size = 30;\nconst baseSpeed = 0.5;\n\nlet zzfx;\n\nexport default class AmmoDropSprite extends EnemySprite {\n  constructor(x, y) {\n    super(x, y, size / 2);\n    this.pointValue = 0;\n    this.acceleration = 1;\n    this.addAction(new Chain(1, smoothStart4, this, 'acceleration', 2.5));\n    if (!zzfx) {\n      zzfx = zzfxInit();\n    }\n  }\n\n  update(t) {\n    const player = this.getPlayer();\n    const speed = baseSpeed * this.acceleration;\n    if (player) {\n      const playerPosition = player.center();\n      const myPosition = this.center();\n\n      const dx = playerPosition.x - myPosition.x;\n      const dy = playerPosition.y - myPosition.y;\n\n      const angle = Math.atan2(dy, dx) + Math.PI;\n      this.dx = Math.cos(angle) * speed;\n      this.dy = Math.sin(angle) * speed;\n    }\n\n    return super.update(t) || true;\n  }\n\n  draw() {\n    const ctx = this.context;\n    ctx.save();\n    ctx.fillStyle = Colors.obstacles;\n    ctx.strokeStyle = Colors.background;\n    ctx.lineWidth = 3;\n    ctx.lineCap = 'round';\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, 2*Math.PI);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.moveTo(this.x - this.radius/2, this.y);\n    ctx.lineTo(this.x + this.radius/2, this.y);\n    ctx.moveTo(this.x, this.y - this.radius/2);\n    ctx.lineTo(this.x, this.y + this.radius/2);\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  absorb() {\n    if (!this.exploded) {\n      this.pointValue = 50;\n      this.incrementScore();\n      this.incrementAmmo();\n      this.parent.removeEnemy(this);\n\n      zzfx(1,.05,1719,0,.09,.11,1,1.14,0,0,992,.08,.02,.1,0,0,0,.7,.01,0); // Pickup 110\n    }\n    this.exploded = true;\n  }\n\n  incrementAmmo() {\n    const player = this.getPlayer();\n    if (!player.exploded) {\n      this.getHud().addAmmo(this.pointValue);\n    }\n  }\n\n}\n","export function vector(x, y) { return { x: x, y: y }; }\n\nexport function origin() { return vector(0, 0); }\n\nexport function sqr(x) {\n  return x * x;\n}\n\nexport function distanceSquared(v, w) {\n  return sqr(v.x - w.x) + sqr(v.y - w.y);\n}\n\nexport function distance(v, w) {\n  return Math.sqrt(distanceSquared(v, w));\n}\n\n// Angle of vector from v to w, relative to y axis.\nexport function angle(v, w) {\n  const dx = w.x - v.x;\n  const dy = w.y - v.y;\n  return Math.atan2(dy, dx);\n}\n\nexport function distToSegmentSquared(p, v, w) {\n  const l2 = distanceSquared(v, w);\n  if (l2 === 0) return distanceSquared(p, v);\n  let t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2;\n  t = Math.max(0, Math.min(1, t));\n  return distanceSquared(p, {\n    x: v.x + t * (w.x - v.x),\n    y: v.y + t * (w.y - v.y)\n  });\n}\n\n// Computes the minimum distance from a point p to line segment\n// between v and w.\nexport function distToSegment(p, v, w) {\n  return Math.sqrt(distToSegmentSquared(p, v, w));\n}\n\nexport function getPointOnCircle(circle, angle) {\n  return vector(\n    Math.cos(angle) * circle.radius + circle.x,\n    Math.sin(angle) * circle.radius + circle.y\n  );\n}\n","import Chain from './Chain'\n\nconst dummyObject = {};\nconst dummyProperty = 'property';\n\nexport default class TimedEvent extends Chain {\n  constructor(callback, delay) {\n    super(0, (t) => {\n      if (t === 1) {\n        callback();\n      }\n    }, dummyObject, dummyProperty, delay);\n  }\n}\n","import Colors from '../../settings/Colors'\nimport RenderLayer from '../RenderLayer'\nimport SpawnSprite from '../../sprites/enemies/SpawnSprite'\nimport SeekerSprite from '../../sprites/enemies/SeekerSprite'\nimport HunterSprite from '../../sprites/enemies/HunterSprite'\nimport AsteroidSprite from '../../sprites/enemies/AsteroidSprite'\nimport SpiralSprite from '../../sprites/enemies/SpiralSprite'\nimport AmmoDropSprite from '../../sprites/enemies/AmmoDropSprite'\n\nimport { removeAll } from '../../utility/array'\nimport { angle, distanceSquared } from '../../math/vector2'\nimport TimedEvent from '../../actions/TimedEvent'\nimport implementActionList from '../../traits/ActionList'\n\nconst spawnInterval = 5;\nconst ammoProbability = 0.15;\n\n// Add EnemySprite types here to include in random spawning.\nconst enemyTypes = [\n  SeekerSprite,\n  HunterSprite,\n  AsteroidSprite,\n  SpiralSprite,\n];\n\nconst spawnPatterns = [\n  'boxSpawn',\n  'cornerSpawn',\n  'sideSpawn',\n];\n\n// Returns a value in [0, n-1].\nfunction randomInt(n) {\n  return Math.floor(Math.random() * n);\n}\n\nfunction randomSelection(array) {\n  const n = array.length;\n  const i = randomInt(n);\n  return array[i];\n}\n\nexport default class Simulation extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n\n    this.context.strokeStyle = Colors.enemies;\n    this.context.fillStyle = Colors.enemies;\n    this.context.lineWidth = 4;\n\n    this.enemies = [];\n\n    implementActionList(this);\n\n    let spawnEvent = new TimedEvent(this.spawn.bind(this), spawnInterval);\n    spawnEvent.then(spawnEvent);\n    this.spawnTimer = spawnEvent;\n    this.addAction(this.spawnTimer);\n    this.spawn();\n  }\n\n  update(t) {\n    const updated = super.update(t);\n    this.checkForEnemyOnEnemyCollisions()\n    return this.updateActions(t) || updated;\n  }\n\n  spawn() {\n    const T = randomSelection(enemyTypes);\n    const pattern = randomSelection(spawnPatterns);\n    this[pattern](T);\n  }\n\n  boxSpawn(T) {\n    const xOffset = Math.floor(this.canvas.width / 8 + Math.random() * (this.canvas.width / 4));\n    const yOffset = Math.floor(this.canvas.height / 8 + Math.random() * (this.canvas.height / 4));\n\n    let x = [xOffset, this.canvas.width / 2, this.canvas.width - xOffset];\n    let y = [yOffset, this.canvas.height / 2, this.canvas.height - yOffset];\n\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (i == 1 && j === 1) continue;\n        let e = new T(x[i], y[j]);\n        this.spawnEnemy(e);\n      }\n    }\n  }\n\n  cornerSpawn(T) {\n    const d = Math.floor(this.canvas.height / (Math.random() * 4 + 3));\n    const top = d, left = d, bottom = (this.canvas.height - d), right = (this.canvas.width - d);\n    const enemies = [];\n    this.addCluster(enemies, T, left + randomInt(100), top + randomInt(100));\n    this.addCluster(enemies, T, right - randomInt(100), bottom - randomInt(100));\n    this.addCluster(enemies, T, right - randomInt(100), top + randomInt(100));\n    this.addCluster(enemies, T, left + randomInt(100), bottom);\n    for (const e of enemies) {\n      this.spawnEnemy(e);\n    }\n  }\n\n  sideSpawn(T) {\n    let x = randomInt(this.canvas.width - 400) + 200;\n    let y = randomInt(this.canvas.height - 400) + 200;\n\n    const n = 5;\n    const dx = Math.floor(this.canvas.width / (n+2));\n    const dy = Math.floor(this.canvas.height / (n+2));\n    if (Math.random() < 0.5) {\n      for (let i = 1; i <= n; ++i) {\n        this.spawnEnemy(new T(x + randomInt(50), i * dy + randomInt(50)));\n        this.spawnEnemy(new T(x - randomInt(50) - 50, i * dy + randomInt(50)));\n      }\n    } else {\n      for (let i = 1; i <= n; ++i) {\n        this.spawnEnemy(new T(i * dx + randomInt(50), y + randomInt(50)));\n        this.spawnEnemy(new T(i * dx + randomInt(50), y - randomInt(50) - 50));\n      }\n    }\n  }\n\n  addCluster(enemies, T, x, y) {\n    const offset = randomInt(20) + 60;\n    enemies.push(new T(x, y));\n    enemies.push(new T(x + offset, y + offset));\n    enemies.push(new T(x, y + offset));\n    enemies.push(new T(x + offset, y));\n  }\n\n  spawnEnemy(e) {\n    if (Math.random() <= ammoProbability) {\n      e = new AmmoDropSprite(e.x, e.y);\n    }\n    this.addObject(new SpawnSprite(e.x, e.y, e));\n  }\n\n  addEnemy(e) {\n    this.enemies.push(e);\n    this.addObject(e);\n  }\n\n  removeEnemy(o) {\n    removeAll(this.enemies, e => e === o);\n    this.removeObject(o);\n  }\n\n  checkForEnemyOnEnemyCollisions() {\n    const enemies = this.enemies;\n    for (let i = 0; i < enemies.length; ++i) {\n      for (let j = i + 1; j < enemies.length; ++j) {\n        const a = enemies[i];\n        const b = enemies[j];\n        if (this.isCollision(a, b)) {\n          if (a instanceof AsteroidSprite) {\n            if (b instanceof AsteroidSprite) {\n              // bounce\n              const angleAB = angle(a, b);\n              a.setDirection(angleAB - Math.PI);\n              b.setDirection(angleAB);\n            }\n            // explode after bounce, or else one or both could be dead.\n            a.explode();\n            b.explode();\n          } else if (b instanceof AsteroidSprite) {\n            a.explode();\n            b.explode();\n          }\n        }\n      }\n    }\n  }\n\n  isCollision(a, b) {\n    const collideAt = a.radius + b.radius;\n    return (distanceSquared(a.center(), b.center()) <= (collideAt * collideAt));\n  }\n}\n","import EnemySprite from './EnemySprite'\nimport Chain from '../../actions/Chain'\nimport { smoothStart5 } from '../../math/easing'\n\nconst size = 30;\nconst baseSpeed = 3;\n\nexport default class SeekerSprite extends EnemySprite {\n  constructor(x, y) {\n    super(x, y, size / 2);\n    x -= size / 2;\n    y -= size / 2;\n    this.x = x;\n    this.y = y;\n    this.width = size;\n    this.height = size;\n    this.acceleration = 1;\n    this.addAction(new Chain(0.75, smoothStart5, this, 'acceleration', 2.5));\n  }\n\n  center() {\n    this._center.x = this.x + size/2;\n    this._center.y = this.y + size/2;\n    return this._center;\n  }\n\n  update(t) {\n    const player = this.getPlayer();\n    const speed = baseSpeed * this.acceleration;\n    if (player) {\n      const playerPosition = player.center();\n      const myPosition = this.center();\n\n      const dx = playerPosition.x - myPosition.x;\n      const dy = playerPosition.y - myPosition.y;\n      if (Math.abs(dx) < speed && Math.abs(dy) < speed) {\n        this.dx = 0;\n        this.dy = 0;\n      } else {\n        const angle = Math.atan2(dy, dx);\n        this.dx = Math.cos(angle) * speed;\n        this.dy = Math.sin(angle) * speed;\n      }\n    }\n\n    return super.update(t);\n  }\n\n  draw() {\n    this.context.strokeRect(this.x, this.y, this.width, this.height);\n  }\n}\n","import Sprite from './Sprite'\n\nconst startAngle = 0, endAngle = 2 * Math.PI;\n\nexport default class CircleSprite extends Sprite {\n  constructor(x, y, radius) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n  }\n\n  draw() {\n    const ctx = this.context;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, startAngle, endAngle);\n    ctx.stroke();\n  }\n}\n","import CircleSprite from './CircleSprite'\n\nconst startAngle = 0, endAngle = 2 * Math.PI;\n\nexport default class BulletSprite extends CircleSprite {\n  constructor(x, y, radius) {\n    super(x, y, radius);\n  }\n\n  update(t) {\n    // If the bullet is out of bounds, remove it.\n    if (this.x < 0 || this.y < 0 || this.x > this.parent.canvas.width || this.y > this.parent.canvas.height) {\n      this.parent.removeBullet(this);\n      return true;\n    }\n    return super.update(t);\n  }\n}\n","import Sprite from './Sprite'\nimport BulletSprite from './BulletSprite'\nimport ParticleBlastSprite from './ParticleBlastSprite'\nimport { KEY_LEFT, KEY_UP, KEY_RIGHT, KEY_DOWN } from '../world/input/KeyState'\nimport { KEY_W, KEY_A, KEY_S, KEY_D } from '../world/input/KeyState'\nimport { KEY_SPACE } from '../world/input/KeyState'\nimport TimedEvent from '../actions/TimedEvent'\nimport zzfxInit from '../sound/ZzFx'\nimport { showCursor, hideCursor } from '../world/dom'\n\nconst startAngle = 0, endAngle = 2 * Math.PI;\nconst speed = 5;\nconst acceleration = 0.2;\nconst analogDeadZone = 0.2;\nconst analogDeadZoneSquared = analogDeadZone * analogDeadZone;\n\n// Reach this score to upgrade guns. More shots uses more ammo, though.\nconst level1Guns = 500;\nconst level2Guns = 1500;\n\n// x or y at PI/4\nconst normalizer = Math.sqrt(2)/2;\n\nconst leftThumbstickHorizontal = 0;\nconst leftThumbstickVertical = 1;\nconst rightThumbstickHorizontal = 2;\nconst rightThumbstickVertical = 3;\n\nlet zzfx;\n\nexport default class PlayerSprite extends Sprite {\n  constructor(x, y, radius) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this._center = {};\n\n    this.aim = { dx: 0, dy: 0 };\n    this.lastAim = { dx: 0, dy: 0 };\n\n    let shoot = new TimedEvent(this.shoot.bind(this), 0.2);\n    shoot.then(shoot);\n    this.shootAction = shoot;\n    this.ammo = 404;\n    this.shots = 1;\n\n    this.showCursor();\n\n    if (!zzfx) {\n      zzfx = zzfxInit();\n    }\n  }\n\n  showCursor() {\n    if (this.isUsingGamepad) {\n      showCursor();\n      this.isUsingGamepad = false;\n    }\n  }\n\n  hideCursor() {\n    if (!this.isUsingGamepad) {\n      hideCursor();\n      this.isUsingGamepad = true;\n    }\n  }\n\n  startShooting() {\n    this.addAction(this.shootAction);\n  }\n\n  stopShooting() {\n    this.removeAction(this.shootAction);\n  }\n\n  magnitude({dx, dy}) {\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  shoot() {\n    switch (this.shots) {\n      case 1:\n        this.shoot1();\n        break;\n      case 2:\n        this.shoot2();\n        break;\n      case 3:\n        this.shoot3();\n        break;\n    }\n  }\n\n  shoot1() {\n    if (!this.inDeadZone(this.aim.dx, this.aim.dy) && this.ammo) {\n      const x = this.x + this.aim.dx * this.radius;\n      const y = this.y + this.aim.dy * this.radius;\n      const bullet = new BulletSprite(x, y, 5);\n      // Normalize the aim so shots are always the same speed even when\n      // tapping lightly on the analog stick.\n      const magnitude = this.magnitude(this.aim);\n      bullet.dx = this.aim.dx / magnitude * speed * 2;\n      bullet.dy = this.aim.dy / magnitude * speed * 2;\n      this.parent.addBullet(bullet);\n      this.decrementAmmo(1);\n      zzfx(1,.05,31,.04,0,.08,1,.17,0,0,0,0,.03,0,0,0,0,.23,.01,0); // Blip 97\n    }\n  }\n\n  shoot2() {\n    if (!this.inDeadZone(this.aim.dx, this.aim.dy) && this.ammo > 1) {\n      const x = this.x + this.aim.dx * this.radius;\n      const y = this.y + this.aim.dy * this.radius;\n      const angle = Math.atan2(this.aim.dy, this.aim.dx);\n      const stepX = Math.cos(angle + Math.PI/2) * 5;\n      const stepY = Math.sin(angle + Math.PI/2) * 5;\n\n      let bullet;\n      bullet = new BulletSprite(x + stepX, y + stepY, 5);\n      bullet.dx = Math.cos(angle + Math.PI/90) * speed * 2;\n      bullet.dy = Math.sin(angle + Math.PI/90) * speed * 2;\n      this.parent.addBullet(bullet);\n      bullet = new BulletSprite(x - stepX, y - stepY, 5);\n      bullet.dx = Math.cos(angle - Math.PI/90) * speed * 2;\n      bullet.dy = Math.sin(angle - Math.PI/90) * speed * 2;\n      this.parent.addBullet(bullet);\n\n      this.decrementAmmo(2);\n      zzfx(1,.05,31,.04,0,.08,1,.17,0,0,0,0,.03,0,0,0,0,.23,.01,0); // Blip 97\n      zzfx(1,.05,31,.04,0,.08,1,.17,0,0,0,0,.03,0,0,0,0,.23,.01,0); // Blip 97\n    }\n  }\n\n  shoot3() {\n    this.shoot2();\n    this.shoot1();\n  }\n\n  decrementAmmo(amount) {\n    this.ammo = this.getLayer('hud').decrementAmmo(amount);\n  }\n\n  updateGuns() {\n    const score = this.getLayer('hud').addScore(0);\n    if (score > level2Guns) {\n      this.shots = 3;\n    } else if (score > level1Guns) {\n      this.shots = 2;\n    }\n  }\n\n  updateVelocity(gp) {\n    let dx = 0, dy = 0;\n\n    if (gp) {\n      dx = gp.axes[leftThumbstickHorizontal];\n      dy = gp.axes[leftThumbstickVertical];\n\n      // Prevent drift when sticks aren't really pushed in any direction.\n      if (this.inDeadZone(dx, dy)) {\n        dx = 0;\n        dy = 0;\n      }\n    }\n\n    let keyInput = false;\n    if (this.parent.keys.isKeyDown(KEY_LEFT) || this.parent.keys.isKeyDown(KEY_A)) { dx -= 1; keyInput = true; }\n    if (this.parent.keys.isKeyDown(KEY_RIGHT) || this.parent.keys.isKeyDown(KEY_D)) { dx += 1; keyInput = true; }\n    if (this.parent.keys.isKeyDown(KEY_UP) || this.parent.keys.isKeyDown(KEY_W)) { dy -= 1; keyInput = true; }\n    if (this.parent.keys.isKeyDown(KEY_DOWN) || this.parent.keys.isKeyDown(KEY_S)) { dy += 1; keyInput = true; }\n    // Fix this so it normalizes the diagonal speed.\n    if (keyInput && dx && dy) {\n      dx *= normalizer;\n      dy *= normalizer;\n    }\n\n    this.dx = speed * dx;\n    this.dy = speed * dy;\n    this.angle = Math.atan2(dy, dx);\n  }\n\n  inDeadZone(x, y) {\n    return (x * x + y * y < analogDeadZoneSquared);\n  }\n\n  getMouse() {\n    return this.getLayer('hud').mouse;\n  }\n\n  updateAim(gp) {\n    let dx = 0, dy = 0;\n\n    if (gp) {\n      dx = gp.axes[rightThumbstickHorizontal];\n      dy = gp.axes[rightThumbstickVertical];\n      // Prevent drift when sticks aren't really pushed in any direction.\n      if (this.inDeadZone(dx, dy)) {\n        dx = 0;\n        dy = 0;\n      } else {\n        this.hideCursor();\n      }\n    }\n\n    // Space bar to shoot straight ahead\n    const mouse = this.getMouse();\n    if (mouse.isMouseDown) {\n      const angle = Math.atan2(mouse.current.y - this.y, mouse.current.x - this.x);\n      dx = Math.cos(angle);\n      dy = Math.sin(angle);\n      this.showCursor();\n    }\n\n    this.lastAim.dx = this.aim.dx;\n    this.lastAim.dy = this.aim.dy;\n    this.aim.dx = dx;\n    this.aim.dy = dy;\n    this.aim.angle = Math.atan2(dy, dx);\n\n    if ((this.inDeadZone(this.lastAim.dx, this.lastAim.dy) && !this.inDeadZone(this.aim.dx, this.aim.dy))) {\n      this.startShooting();\n      this.shoot();\n    } else if (!this.inDeadZone(this.lastAim.dx, this.lastAim.dy) && this.inDeadZone(this.aim.dx, this.aim.dy)) {\n      this.stopShooting();\n    }\n    return this.lastAim.dx !== dx || this.lastAim.dy !== dy;\n  }\n\n  explode() {\n    if (!this.exploded) {\n      // explode the player and game over\n      this.stopShooting();\n      this.parent.addObject(new ParticleBlastSprite(this.x, this.y, this.radius, this.radius * 5));\n      zzfx(1,.05,776,0,.21,.83,4,4.8,0,1,0,0,0,.6,.2,.6,0,.94,.09,.41); // Explosion 83\n    }\n    this.exploded = true;\n  }\n\n  update(t) {\n    // Refresh ammo count from HUD\n    this.decrementAmmo(0);\n    this.updateGuns();\n\n    if (!this.exploded) {\n      const gp = navigator.getGamepads()[0];\n      this.updateVelocity(gp);\n\n      let aimUpdated = this.updateAim(gp);\n\n      return super.update(t) || aimUpdated;\n    }\n  }\n\n  center() {\n    this._center.x = this.x;\n    this._center.y = this.y;\n    return this._center;\n  }\n\n  draw() {\n    const ctx = this.context;\n    if (!this.exploded) {\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.radius, startAngle, endAngle);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.arc(this.x + this.aim.dx * this.radius, this.y + this.aim.dy * this.radius, 5, startAngle, endAngle);\n      ctx.stroke();\n    }\n  }\n}\n","import Colors from '../../settings/Colors'\nimport RenderLayer from '../RenderLayer'\nimport PlayerSprite from '../../sprites/PlayerSprite'\nimport TextSprite from '../../sprites/TextSprite'\nimport AmmoDropSprite from '../../sprites/enemies/AmmoDropSprite'\nimport KeyState from '../input/KeyState'\nimport { removeAll } from '../../utility/array'\nimport { distanceSquared } from '../../math/vector2'\n\nexport default class Player extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n\n    this.context.strokeStyle = Colors.player;\n    this.context.fillStyle = Colors.player;\n    this.context.lineWidth = 4;\n    this.context.font = '64px serif';\n\n    this.player = new PlayerSprite(this.canvas.width / 2, this.canvas.height / 2, 20);\n    this.addObject(this.player);\n\n    this.keys = new KeyState(window);\n\n    this.bullets = [];\n  }\n\n  addBullet(bullet) {\n    this.bullets.push(bullet);\n    this.addObject(bullet);\n  }\n\n  removeBullet(o) {\n    removeAll(this.bullets, e => e === o);\n    this.removeObject(o);\n  }\n\n  update(t) {\n    const updated = super.update(t);\n    // Check if player has exploded\n    if (this.player.exploded) {\n      this.parent.gameOver();\n    }\n    // Check for bullet collisions\n    this.checkForBulletCollisions();\n    // Check for enemy collisions\n    this.checkForEnemyCollisions();\n    return updated;\n  }\n\n  checkForBulletCollisions() {\n    const enemies = this.getLayer('simulation').enemies;\n    const dead = [];\n    for (const b of this.bullets) {\n      for (const e of enemies) {\n        const collideAt = b.radius + e.radius;\n        if (distanceSquared(b, e.center()) < (collideAt * collideAt)) {\n          // Crash!\n          dead.push(b);\n          e.explode();\n        }\n      }\n    }\n    for (const d of dead) {\n      this.removeBullet(d);\n    }\n  }\n\n  checkForEnemyCollisions() {\n    const enemies = this.getLayer('simulation').enemies;\n    for (const e of enemies) {\n      const collideAt = this.player.radius + e.radius;\n      if (distanceSquared(this.player, e.center()) < (collideAt * collideAt)) {\n        // Crash!\n        if (e instanceof AmmoDropSprite) {\n          e.absorb();\n        } else {\n          e.explode();\n          this.player.explode();\n          this.parent.gameOver();\n        }\n      }\n    }\n  }\n}\n","import MouseState from '../input/MouseState'\nimport Colors from '../../settings/Colors'\nimport RenderLayer from '../RenderLayer'\nimport TextSprite from '../../sprites/TextSprite'\nimport { smoothStart2, smoothStop4 } from '../../math/easing'\nimport Chain from '../../actions/Chain'\n\nconst textFont = '64px verdana';\nconst textHeight = 64 * 1.25;\nconst ammoMax = 404;\n\nexport default class Hud extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n\n    this.context.strokeStyle = Colors.player;\n    this.context.fillStyle = Colors.player;\n    this.context.lineWidth = 4;\n    this.context.font = textFont;\n\n    this.score = 0;\n    this.ammo = ammoMax;\n\n    this.scoreSprite = new TextSprite('score: 0', 50, textHeight);\n    this.scoreSprite.state = 'visible';\n    this.addObject(this.scoreSprite);\n    this.ammoSprite = new TextSprite(`ammo: ${this.ammo}`, this.canvas.width - 430, textHeight);\n    this.ammoSprite.state = 'visible';\n    this.addObject(this.ammoSprite);\n\n    this.mouse = new MouseState(this.canvas);\n  }\n\n  addScore(amount) {\n    this.isDirty = true;\n    this.score += amount;\n    return this.score;\n  }\n\n  addAmmo(amount) {\n    this.isDirty = true;\n    this.ammo = Math.min(ammoMax, this.ammo + amount);\n    return this.ammo;\n  }\n\n  decrementAmmo(amount = 1) {\n    this.isDirty = true;\n    this.ammo = Math.max(0, this.ammo - amount);\n    return this.ammo;\n  }\n\n  setAmmo(value) {\n    if (this.ammo != value) {\n      this.ammo = value;\n      this.isDirty = true;\n    }\n  }\n\n  getPlayer() {\n    return this.getLayer('player').player;\n  }\n\n  hideText(sprite) {\n    const moveOff = new Chain(-textHeight * 1.5, smoothStart2, sprite, 'y', 0.25);\n    sprite.addAction(moveOff);\n    sprite.state = 'hiding';\n  }\n\n  showText(sprite) {\n    const moveOn = new Chain(textHeight * 1.5, smoothStop4, sprite, 'y', 0.33);\n    sprite.addAction(moveOn);\n    sprite.state = 'unhiding';\n  }\n\n  updateState(sprite) {\n    if (sprite.state === 'hiding' && sprite.actions.length === 0) {\n      sprite.state = 'hidden';\n    } else if (sprite.state === 'unhiding' && sprite.actions.length === 0) {\n      sprite.state = 'visible';\n    }\n  }\n\n  update(t) {\n    if (this.isDirty) {\n      this.scoreSprite.setText(`score: ${this.score}`);\n      this.ammoSprite.setText(`ammo: ${this.ammo}`);\n    }\n    this.updateState(this.scoreSprite);\n    this.updateState(this.ammoSprite);\n\n    let player = this.getPlayer();\n    if (player.exploded) {\n      player = {\n        x: this.canvas.width,\n        y: this.canvas.height,\n      };\n    }\n    const inTopRange = (player.y < textHeight * 2);\n    if (inTopRange && player.x < 500) {\n      if (this.scoreSprite.state === 'visible') {\n        this.hideText(this.scoreSprite);\n      }\n    } else if (inTopRange && player.x > (this.canvas.width - 500)) {\n      if (this.ammoSprite.state === 'visible') {\n        this.hideText(this.ammoSprite);\n      }\n    } else if (this.scoreSprite.state === 'hidden') {\n      this.showText(this.scoreSprite);\n    } else if (this.ammoSprite.state === 'hidden') {\n      this.showText(this.ammoSprite);\n    }\n    return super.update(t);\n  }\n}\n","import Chain from '../../actions/Chain'\nimport { smoothStop4 } from '../../math/easing'\nimport implementActionList from '../../traits/ActionList'\nimport Colors from '../../settings/Colors'\nimport TextSprite from '../../sprites/TextSprite'\nimport KeyState from '../input/KeyState'\nimport { KEY_ENTER } from '../input/KeyState'\nimport RenderLayer from '../RenderLayer'\n\nconst textFont = '96px verdana';\nconst textHeight = 96 * 1.25;\nconst infoFont = '64px verdana';\nconst infoHeight = 64 * 1.25;\n\nexport default class GameOver extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n    implementActionList(this);\n\n    this.context.strokeStyle = Colors.enemies;\n    this.context.fillStyle = Colors.player;\n    this.context.lineWidth = 8;\n    this.context.font = textFont;\n    this.context.textAlign = 'center';\n\n    this.addAction(new Chain(1, smoothStop4, this, 'ease', .75));\n    this.keys = new KeyState(window);\n\n    this.gameText = new TextSprite('GAME', this.canvas.width / 2, 0 - textHeight);\n    this.overText = new TextSprite('OVER', this.canvas.width / 2, this.canvas.height);// + textHeight);\n    this.addObject(this.gameText);\n    this.addObject(this.overText);\n    this.addAction(new Chain(this.canvas.height / 2, smoothStop4, this.gameText, 'y', 0.5));\n    this.addAction(new Chain(-this.canvas.height / 2, smoothStop4, this.overText, 'y', 0.5));\n  }\n\n  showMessage(message) {\n    const highScore = new TextSprite(message, this.canvas.width / 2, this.canvas.height + textHeight);\n    this.addObject(highScore);\n    this.addAction(new Chain(-this.canvas.height / 2 + textHeight, smoothStop4, highScore, 'y', 1.5));\n  }\n\n  update(t) {\n    super.update(t);\n    this.updateActions(t);\n    const gp = navigator.getGamepads()[0];\n    if (this.keys.isKeyDown(KEY_ENTER)) {\n      this.parent.start();\n    } else if (gp && gp.buttons[0].pressed) {\n      this.parent.start();\n    }\n    this.isDirty = true;\n  }\n\n  draw() {\n    super.draw();\n    const ctx = this.context;\n    ctx.save();\n    ctx.font = infoFont;\n    ctx.fillStyle = Colors.enemies;\n    const x = this.canvas.width / 2;\n    const y = this.canvas.height - infoHeight - infoHeight;\n    ctx.fillText('Press Enter or Button 0 to Restart', x, y);\n    ctx.restore();\n  }\n}\n","// main\n\nimport GameLoop from './world/GameLoop'\nimport World from './world/World'\n\nlet world = new World();\n\nlet gameLoop = new GameLoop(update, draw);\ngameLoop.start();\n\n// Draw the frame\nfunction draw() {\n  world.draw();\n}\n\n// Update the world (with milliseconds elapsed since last update)\nfunction update(elapsed) {\n  world.update(elapsed);\n}\n","import { renderArea } from './dom'\nimport Colors from '../settings/Colors'\nimport { mute, unmute } from '../settings/volume'\nimport Intro from './layers/Intro'\nimport Background from './layers/Background'\nimport Simulation from './layers/Simulation'\nimport Player from './layers/Player'\nimport Hud from './layers/Hud'\nimport GameOver from './layers/GameOver'\n\nexport default class World {\n  constructor() {\n    this.gameIsStarted = false;\n    this.gameIsOver = false;\n    renderArea.style.background = Colors.background;\n    this.layer = {};\n    this.layers = [];\n    this.highScore = 0;\n\n    this.intro();\n  }\n\n  addLayer(layer) {\n    layer.parent = this;\n    this.layer[layer.name] = layer;\n    this.layers.push(layer);\n  }\n\n  resetLayers() {\n    for (const l of this.layers) {\n      l.parent = null;\n      l.dispose();\n    }\n    this.layers.length = 0;\n    this.layer = {};\n  }\n\n  update(elapsed) {\n    for (const layer of this.layers) {\n      layer.update(elapsed)\n    }\n\n    if (this.gameIsStarted && !this.gameIsOver && this.layer.player.player.exploded) {\n      this.gameOver();\n    }\n  }\n\n  draw() {\n    for (const layer of this.layers) {\n      layer.draw();\n    }\n  }\n\n  intro() {\n    this.resetLayers();\n    this.addLayer(new Intro('intro', 0));\n  }\n\n  start() {\n    this.resetLayers();\n    unmute();\n    this.addLayer(new Background('background', 0));\n    this.addLayer(new Simulation('simulation', 1));\n    this.addLayer(new Player('player', 2));\n    this.addLayer(new Hud('hud', 3));\n    this.gameIsOver = false;\n  }\n\n  gameOver() {\n    if (!this.gameIsOver) {\n      mute();\n      this.addLayer(new GameOver('gameover', 4));\n      this.gameIsOver = true;\n      const latestScore = this.layer.hud.score;\n      if (latestScore > this.highScore) {\n        // New high score!\n        this.highScore = latestScore;\n        this.layer.gameover.showMessage(`New High Score: ${latestScore}!!`);\n      } else {\n        this.layer.gameover.showMessage(`Score to Beat: ${this.highScore}`);\n      }\n    }\n  }\n}\n","const maxTick = 1/15;\n\nexport default class GameLoop {\n  constructor(update, draw) {\n    this.update = update;\n    this.draw = draw;\n    this.nextTick = this.tick.bind(this);\n  }\n\n  start() {\n    const firstTick = this.init.bind(this);\n    window.requestAnimationFrame(firstTick);\n  }\n\n  // In the very first frame, we want elapsedTime to be zero.\n  init(timeStamp) {\n    this.lastTimeStamp = timeStamp;\n    this.tick(timeStamp);\n  }\n\n  tick(timeStamp) {\n    let elapsedTime = (timeStamp - this.lastTimeStamp) / 1000;\n    this.lastTimeStamp = timeStamp;\n\n    // If we're debugging and stopped at a breakpoint during the last frame, the\n    // elapsed time will be huge. If that happens, reset the clock. Same if we\n    // drop below 15 frames per second.\n    if (elapsedTime > maxTick) {\n      elapsedTime = maxTick;\n    }\n\n    this.update(elapsedTime);\n\n    // Perform the drawing operation\n    this.draw();\n\n    // The loop function has reached it's end. Keep requesting new frames\n    window.requestAnimationFrame(this.nextTick);\n  }\n}\n"],"names":["renderArea","document","getElementById","createCanvas","createElement","palette","Colors","background","obstacles","enemies","player","volume","oldVolume","Chain","[object Object]","s","f","o","p","d","this","t","isStarted","isDone","parent","remainder","startValue","next","addAction","start","update","then","smoothStart2","smoothStart3","smoothStart4","smoothStart5","smoothStop3","smoothStop4","removeAll","array","predicate","last","kept","length","implementActionList","target","actions","updateActions","removeAction","isDirty","action","a","push","Sprite","dx","dy","context","x","y","name","getLayer","TextSprite","text","super","newText","fillText","endAngle","Math","PI","GamepadControlsSprite","scale","radius","ctx","beginPath","arc","fill","save","lineWidth","lineCap","fillStyle","moveTo","size","lineTo","width","rect","stroke","drawThumbStick","restore","strokeStyle","font","textAlign","KeyboardControlsSprite","keySize","keySpacing","height","r","c","strokeRect","drawKey","top","bottom","left","right","drawKeys","drawMouse","MouseState","canvas","addEventListener","onMouseDown","bind","onMouseMove","onMouseOut","onMouseUp","state","isMouseDown","isMouseOver","current","dragging","dragComplete","e","position","offsetX","clientWidth","offsetY","clientHeight","clientToCanvas","drop","log","updateCurrent","onMouseEvent","reset","begin","end","alreadyDown","becameDown","which","onBeginDrag","becameUp","onEndDrag","KEY_A","KEY_C","KEY_D","KEY_S","KEY_V","KEY_W","KEY_Y","KEY_Z","KeyState","window","onKeyDown","onKeyUp","newKeysDown","keysDown","newKeysUp","key","undefined","code","keyCode","metaKey","RenderLayer","layer","z","dom","id","style","getContext","objects","appendChild","isObjectListDirty","storedTransform","getTransform","setTransform","clearRect","object","updated","sort","b","clear","draw","removeChild","infoText","startText","Intro","titleEase","addObject","keys","mouse","gradient","createRadialGradient","addColorStop","fillRect","yOffset","random","shadowBlur","shadowOffsetX","round","shadowOffsetY","shadowColor","centerX","centerY","i","n","savedFill","savedStroke","measureText","textHeight","isKeyDown","renderTitle","renderInfoText","renderNext","BoxSprite","Background","checkForBoundaryCollisions","collidesWithBoundary","explode","distance","SpawnSprite","enemy","floor","particles","Array","angle","duration","factor","countDown","cos","sin","addEnemy","removeObject","ParticleBlastSprite","innerRadius","outerRadius","diameter","speed","ttl","anyAlive","zzfxInit","zzfxX","AudioContext","webkitAudioContext","q","k","u","F","v","w","A","l","B","G","m","C","h","H","I","D","Z","g","E","J","K","max","min","tan","abs","zzfxV","createBuffer","getChannelData","set","createBufferSource","buffer","connect","destination","zzfx","EnemySprite","_center","pointValue","exploded","incrementScore","removeEnemy","getPlayer","getHud","addScore","halfRepelAngle","twoPi","fixAngle","AsteroidSprite","originalRadius","hits","aabb","bounce","getBoundaryBox","atan2","AmmoDropSprite","acceleration","playerPosition","center","myPosition","incrementAmmo","addAmmo","sqr","distanceSquared","dummyObject","TimedEvent","callback","delay","enemyTypes","reverseSpeed","inRepelArc","deviation","angleFromPlayer","playerAngle","spinX","spinY","spiralRadiusEase","spiralAngleEase","spiralAngle","spinDirection","spiralGrowth","spiralShrink","spawnPatterns","randomInt","randomSelection","Simulation","spawnEvent","spawn","spawnTimer","checkForEnemyOnEnemyCollisions","T","xOffset","j","spawnEnemy","addCluster","offset","isCollision","angleAB","setDirection","collideAt","CircleSprite","BulletSprite","removeBullet","normalizer","sqrt","PlayerSprite","aim","lastAim","shoot","shootAction","ammo","shots","showCursor","isUsingGamepad","classList","remove","add","shoot1","shoot2","shoot3","inDeadZone","bullet","magnitude","addBullet","decrementAmmo","stepX","stepY","amount","score","gp","axes","keyInput","hideCursor","getMouse","startShooting","stopShooting","updateGuns","navigator","getGamepads","updateVelocity","aimUpdated","updateAim","Player","bullets","gameOver","checkForBulletCollisions","checkForEnemyCollisions","dead","absorb","Hud","scoreSprite","ammoSprite","value","sprite","moveOff","moveOn","setText","updateState","inTopRange","hideText","showText","GameOver","gameText","overText","message","highScore","buttons","pressed","world","gameIsStarted","gameIsOver","layers","intro","dispose","elapsed","resetLayers","addLayer","latestScore","hud","gameover","showMessage","nextTick","tick","firstTick","init","requestAnimationFrame","timeStamp","lastTimeStamp","elapsedTime"],"mappings":"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"}