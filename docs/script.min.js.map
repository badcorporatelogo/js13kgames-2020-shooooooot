{"version":3,"file":"script.min.js","sources":["../src/js/world/dom.js","../src/js/settings/Colors.js","../src/js/settings/volume.js","../src/js/actions/Chain.js","../src/js/math/easing.js","../src/js/utility/array.js","../src/js/traits/ActionList.js","../src/js/sprites/Sprite.js","../src/js/sprites/TextSprite.js","../src/js/sprites/controls/GamepadControlsSprite.js","../src/js/sprites/controls/KeyboardControlsSprite.js","../src/js/world/input/MouseState.js","../src/js/world/input/KeyState.js","../src/js/world/RenderLayer.js","../src/js/world/layers/Intro.js","../src/js/sprites/BoxSprite.js","../src/js/world/layers/Background.js","../src/js/sprites/enemies/SpawnSprite.js","../src/js/sprites/ParticleBlastSprite.js","../src/js/sound/ZzFx.js","../src/js/sprites/enemies/EnemySprite.js","../src/js/sprites/enemies/HunterSprite.js","../src/js/sprites/enemies/AsteroidSprite.js","../src/js/sprites/enemies/SpiralSprite.js","../src/js/sprites/enemies/AmmoDropSprite.js","../src/js/math/vector2.js","../src/js/actions/TimedEvent.js","../src/js/world/layers/Simulation.js","../src/js/sprites/enemies/SeekerSprite.js","../src/js/sprites/CircleSprite.js","../src/js/sprites/BulletSprite.js","../src/js/sprites/PlayerSprite.js","../src/js/world/layers/Player.js","../src/js/world/layers/Hud.js","../src/js/world/layers/GameOver.js","../src/js/main.js","../src/js/world/World.js","../src/js/world/GameLoop.js"],"sourcesContent":["// Easy access to DOM elements defined in index.html\nexport const renderArea = document.getElementById('render-area');\n\nexport default {\n  createCanvas() {\n    return document.createElement('canvas');\n  }\n}\n\nexport function showCursor() {\n  renderArea.classList.remove('hidecursor');\n  renderArea.classList.add('showcursor');\n}\n\nexport function hideCursor() {\n  renderArea.classList.remove('showcursor');\n  renderArea.classList.add('hidecursor');\n}\n","// https://colorhunt.co/palette/191947\nconst palette191947 = [\n  '#111d5e',\n  '#c70039',\n  '#f37121',\n  '#ffbd69'\n];\n\n// https://colorhunt.co/palette/195741\nconst palette195741 = [\n  '#810000',\n  '#e97171',\n  '#ffcb8e',\n  '#f5efef'\n];\n\nconst palette = palette195741;\n\nexport default class Colors {\n  static background = palette[0];\n  static obstacles = palette[1];\n  static enemies = palette[2];\n  static player = palette[3];\n}\n","// global volume setting\nexport var volume = 0.1;\n\n// store volume while muted\nvar oldVolume = volume;\n\nexport function mute() {\n  oldVolume = volume;\n  volume = 0;\n}\n\nexport function unmute() {\n  volume = oldVolume;\n}\n","export default class Chain {\n  // s - scale\n  // f - function\n  // o - object\n  // p - property\n  // d - duration\n  constructor(s, f, o, p, d) {\n    this.s = s;\n    this.f = f;\n    this.o = o;\n    this.p = p;\n    this.d = d;\n    this.t = 0;\n    this.isStarted = false;\n    this.isDone = false;\n    this.parent = null; // set by Sprite.addAction\n  }\n\n  // t - elapsed time since last update\n  update(t) {\n    if (!this.isStarted) {\n      this.isStarted = true;\n      this.startValue = this.o[this.p] || 0;\n    } else if (!this.isDone) {\n      this.t += t/this.d;\n      let remainder = 0;\n      if (this.t > 1) {\n        remainder = this.t - 1;\n        this.t = 1;\n        this.isDone = true;\n      }\n      this.o[this.p] = this.startValue + this.s * this.f(this.t);\n      if (this.isDone && this.next) {\n        if (this.next !== this) {\n          this.parent.addAction(this.next);\n        }\n        this.next.start();\n        this.next.update(remainder);\n      }\n    }\n  }\n\n  // explicit start so we can skip the initial position\n  start() {\n    this.isStarted = false;\n    this.t = 0;\n    this.isDone = false;\n    this.update(0);\n  }\n\n  // enable: new Chain().then(new Chain()).then(new Chain())...\n  then(next) {\n    if (this.next) {\n      this.next.then(next);\n    } else {\n      this.next = next;\n    }\n    return this;\n  }\n}\n","// 1D normalized nonlinear transformations\n// Use values of t in [0, 1].\n\nexport function smoothStart2(t) { return t * t; }\nexport function smoothStart3(t) { return t * t * t; }\nexport function smoothStart4(t) { return t * t * t * t; }\nexport function smoothStart5(t) { return t * t * t * t * t; }\nexport function smoothStart6(t) { return t * t * t * t * t * t; }\n\nexport function smoothStop2(t) { return 1 - (1 - t) * (1 - t); }\nexport function smoothStop3(t) { return 1 - (1 - t) * (1 - t) * (1 - t); }\nexport function smoothStop4(t) { return 1 - (1 - t) * (1 - t) * (1 - t) * (1 - t); }\nexport function smoothStop5(t) { return 1 - (1 - t) * (1 - t) * (1 - t) * (1 - t) * (1 - t); }\nexport function smoothStop6(t) { return 1 - (1 - t) * (1 - t) * (1 - t) * (1 - t) * (1 - t) * (1 - t); }\n\n// Transformations (a and b are functions)\n\nexport function mix(a, b, weightB, t) { return (1 - weightB) * a(t) + weightB * b(t); }\n\nexport function crossfade(a, b, t) { return (1 - t) * a(t) + t * b(t); }\n\nexport function scale(a, t) { return t * a(t); }\n\nexport function reverseScale(a, t) { return (1 - t) * a(t); }\n\nexport function arch2(t) { return t * (1 - t); }\n\n// scale(arch2, t)\nexport function smoothStartArch3(t) { return t * t * (1 - t); }\n\n// reserseScale(arch2, t)\nexport function smoothStopArch3(t) { return t * (1 - t) * (1 - t); }\n\nexport function smoothStepArch4(t) { return reverseScale(t => scale(arch2, t), t); }\n\nexport function bellCurve6(t) { return smoothStop3(t) * smoothStop3(t); }\n\nexport function bounceClampBottom(t) { return Math.abs(t); }\nexport function bounceClampTop(t) { return 1 - Math.abs(1 - t); }\nexport function bounceClampBottomTop(t) { return bounceClampTop(bounceClampBottom(t)); }\n\n// Cubic (3rd) Bezier through A,B,C,D where A (start) and D (end) are assumed to be 0 and 1\nexport function normalizedBezier3(b, c, t) {\n  let s = 1 - t;\n  let t2 = t * t;\n  let s2 = s * s;\n  let t3 = t * t2;\n  return (3 * b * s2 * t) + (3 * c * s * t2) + t3;\n}\n","export function removeAll(array, predicate) {\n  let next = 0;\n  let last = 0;\n  let kept = 0;\n  for (let next = 0; next < array.length; ++next) {\n    if (predicate(array[next])) {\n    } else if (next > last) {\n      array[last++] = array[next];\n      ++kept;\n    } else {\n      ++last;\n      ++kept;\n    }\n  }\n  array.length = kept;\n}\n","import { removeAll } from '../utility/array'\n\nexport default function implementActionList(target) {\n  target.actions= [];\n  target.updateActions = updateActions;\n  target.addAction = addAction;\n  target.removeAction = removeAction;\n}\n\nfunction updateActions(t) {\n  let isDirty = false;\n  if (this.actions.length) {\n    for (const action of this.actions) {\n      action.update(t);\n    }\n    isDirty = true;\n  }\n  removeAll(this.actions, a => a.isDone);\n  return isDirty;\n}\n\nfunction addAction(action) {\n  this.actions.push(action);\n  action.parent = this;\n}\n\nfunction removeAction(action) {\n  removeAll(this.actions, a => a === action);\n  action.parent = null;\n}\n","import implementActionList from '../traits/ActionList'\n\nexport default class Sprite {\n  constructor() {\n    implementActionList(this);\n    this.dx = 0;\n    this.dy = 0;\n    this.context = null; // set by RenderLayer.addObject\n  }\n\n  update(t) {\n    let isDirty = this.updateActions(t);\n\n    if (this.dx || this.dy) {\n      this.x += this.dx;\n      this.y += this.dy;\n      isDirty = true;\n    }\n    return isDirty;\n  }\n\n  getLayer(name) {\n    return this.parent.getLayer(name);\n  }\n}\n","import Sprite from './Sprite'\n\nexport default class TextSprite extends Sprite {\n  constructor(text, x, y) {\n    super();\n    this.text = text;\n    this.x = x;\n    this.y = y;\n  }\n\n  setText(newText) {\n    if (this.text !== newText) {\n      this.text = newText;\n      this.isDirty = true;\n    }\n  }\n\n  update(t) {\n    return super.update(t) || this.isDirty;\n  }\n\n  draw() {\n    this.context.fillText(this.text, this.x, this.y);\n    this.isDirty = false;\n  }\n}\n","import Sprite from '../Sprite'\nimport Colors from '../../settings/Colors'\n\nconst lineWidth = 36;\nconst size = 64;\nconst height = size*2/3;\nconst width = size;\nconst startAngle = 0, endAngle = 2 * Math.PI;\n\nexport default class GamepadControlsSprite extends Sprite {\n  constructor(x, y, scale = 1) {\n    super();\n    this.x = x;\n    this.y = y + lineWidth;\n  }\n\n  drawThumbStick(x, y, radius) {\n    const ctx = this.context;\n    ctx.beginPath();\n    ctx.arc(x, y, radius, startAngle, endAngle);\n    ctx.fill();\n  }\n\n  draw() {\n    const ctx = this.context;\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.lineCap = 'round';\n    ctx.fillStyle = Colors.background;\n    ctx.beginPath();\n    ctx.moveTo(this.x, this.y + height);\n    ctx.lineTo(this.x + width/5, this.y);\n    ctx.moveTo(this.x + width/5, this.y+height/5);\n    ctx.rect(this.x + width/5, this.y+height/5, width*3/5, height/5);\n    ctx.moveTo(this.x + width*4/5, this.y);\n    ctx.lineTo(this.x + width, this.y + height);\n    ctx.stroke();\n    this.drawThumbStick(this.x + width/5, this.y + height*2/5 ,lineWidth/4);\n    this.drawThumbStick(this.x + width*4/5, this.y + height*2/5 ,lineWidth/4);\n    this.context.restore();\n\n    this.context.save();\n    this.context.fillStyle = this.context.strokeStyle;\n    this.context.font = '24px verdana';\n    this.context.textAlign = 'left';\n    this.context.fillText('Gamepad', this.x - 30, this.y - 48);\n    this.context.restore();\n  }\n}\n","import Sprite from '../Sprite'\n\nconst size = 300;\n\nexport default class KeyboardControlsSprite extends Sprite {\n  constructor(x, y, scale = 1) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.width = size * scale;\n    this.keySize = this.width / 20;\n    this.keySpacing = this.keySize * 1.1;\n    this.height = this.keySpacing * 6;\n  }\n\n  drawKey(x, y, r, c) {\n    const keySize = this.keySize;\n    const keySpacing = this.keySize * 1.1;\n    this.context.strokeRect(x + c * keySpacing, y + r * keySpacing, keySize, keySize);\n  }\n\n  drawKeys(x, y) {\n    this.drawKey(x, y, 0, 1);\n    for (let c = 0; c < 3; ++c) {\n      this.drawKey(x, y, 1, c);\n    }\n  }\n\n  drawMouse() {\n    const ctx = this.context;\n    const radius = this.keySize * 1.5;\n    const x = this.x + this.width + this.keySize * 5;\n    const y = this.y + radius;\n    const top = y + radius;\n    const bottom = y + radius * 2;\n    const left = x - radius;\n    const right = x + radius;\n\n    ctx.beginPath();\n    ctx.arc(x, bottom, radius, 0, Math.PI);\n    ctx.arc(x, top, radius, Math.PI, Math.PI*2);\n    ctx.lineTo(left, top);\n    ctx.moveTo(x, top - radius);\n    ctx.lineTo(x, top);\n    ctx.moveTo(right, top);\n    ctx.lineTo(right, bottom);\n    ctx.stroke();\n  }\n\n  draw() {\n    this.context.strokeRect(this.x, this.y, this.width, this.height);\n    this.drawKeys(this.x + this.keySpacing*2, this.y + this.keySpacing);\n    this.drawKeys(this.x + this.width - this.keySpacing*5, this.y + this.height - this.keySpacing * 3);\n    this.drawMouse();\n\n    this.context.save();\n    this.context.fillStyle = this.context.strokeStyle;\n    this.context.font = '24px verdana';\n    this.context.textAlign = 'left';\n    this.context.fillText('Keyboard and Mouse', this.x + 50, this.y - 24);\n    this.context.restore();\n  }\n}\n","// Mouse States:\n// - Out: Start state. Off-element or unknown.\n// - Moving: Tracks position.\n// - Dragging: Tracks position with button down.\nconst OutState = 'Out';\nconst MovingState = 'Moving';\nconst DraggingState = 'Dragging';\n\n// Mouse up/down event.which identifies a button by numeral.\nconst LeftMouseButton = 1;\n\nexport default class MouseState {\n  constructor(canvas) {\n    // We need to translate between client space and canvas space, and that\n    // requires the current dimensions of the canvas (in case of resize).\n    this.canvas = canvas;\n\n    // Input events we care about.\n    canvas.addEventListener('mousedown', this.onMouseDown.bind(this), false);\n    canvas.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n    canvas.addEventListener('mouseout', this.onMouseOut.bind(this), false);\n    canvas.addEventListener('mouseup', this.onMouseUp.bind(this), false);\n\n    this.state = OutState;\n    this.isMouseDown = false;\n    this.isMouseOver = false;\n    this.current = {};\n    this.dragging = null;\n    this.dragComplete = null;\n  }\n\n  clientToCanvas(e, position = {}) {\n    const canvas = this.canvas;\n    position.x = e.offsetX * canvas.width / canvas.clientWidth;\n    position.y = e.offsetY * canvas.height / canvas.clientHeight;\n    return position;\n  }\n\n  updateCurrent(e) {\n    this.clientToCanvas(e, this.current);\n  }\n\n  log(e) {\n    // console.log(`${e.type} at (${e.offsetX}, ${e.offsetY})`);\n  }\n\n  reset() {\n    this.isMouseOver = false;\n    this.isMouseDown = false;\n    this.current = {};\n    this.dragging = null;\n    this.dragComplete = null;\n  }\n\n  drop() {\n    const drop = this.dragComplete;\n    this.dragComplete = null;\n    return drop;\n  }\n\n  onMouseEvent(e) {\n    this.log(e);\n    this.isMouseOver = true;\n    this.updateCurrent(e);\n  }\n\n  onMouseMove(e) {\n    this.onMouseEvent(e);\n\n    this.state = MovingState;\n  }\n\n  onMouseOut(e) {\n    this.onMouseEvent(e);\n    this.reset();\n\n    this.state = OutState;\n  }\n\n  onBeginDrag(e) {\n    this.dragging = {\n      begin: this.clientToCanvas(e),\n      end: this.current // <-- reference\n    };\n  }\n\n  onEndDrag(e) {\n    this.dragging.end = this.clientToCanvas(e);\n    this.dragComplete = this.dragging;\n    this.dragging = null;\n  }\n\n  onMouseDown(e) {\n    this.onMouseEvent(e);\n    // Look at the old state to deal with weird things like starting the game\n    // with the button pressed, or entering the canvas with button pressed.\n    const alreadyDown = this.isMouseDown;\n    const becameDown = (e.which === LeftMouseButton);\n    if (!alreadyDown && becameDown) {\n      // Begin drag\n      this.isMouseDown = true;\n      this.onBeginDrag(e);\n\n      this.state = DraggingState;\n    } else if (this.state === OutState) {\n      this.state = MovingState;\n    }\n  }\n\n  onMouseUp(e) {\n    this.onMouseEvent(e);\n    // Look at the old state to deal with weird things like starting the game\n    // with the button pressed, or entering the canvas with button pressed.\n    const alreadyDown = this.isMouseDown;\n    const becameUp = (e.which === LeftMouseButton);\n    if (alreadyDown && becameUp) {\n      this.isMouseDown = false;\n      this.onEndDrag(e);\n\n      this.state = MovingState;\n    } else if (this.state === OutState) {\n      this.state = MovingState;\n    }\n  }\n}\n","export const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const [\n  KEY_ZERO,\n  KEY_ONE,\n  KEY_TWO,\n  KEY_THREE,\n  KEY_FOUR,\n  KEY_FIVE,\n  KEY_SIX,\n  KEY_SEVEN,\n  KEY_EIGHT,\n  KEY_NINE\n] = [ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 ];\n\nexport const KEY_BACKSPACE = 8;\nexport const KEY_ESCAPE = 27;\nexport const KEY_SPACE = 32;\nexport const KEY_ENTER = 13;\n\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\n\nexport const KEY_LEFT_META = 91;\nexport const KEY_RIGHT_META = 93;\n\nexport const [\n  KEY_A,\n  KEY_C,\n  KEY_D,\n  KEY_S,\n  KEY_V,\n  KEY_W,\n  KEY_Y,\n  KEY_Z\n] = [ 65, 67, 68, 83, 86, 87, 89, 90 ];\n\n// Special meta keys\nexport const [\n  KEY_COPY,\n  KEY_PASTE,\n  KEY_REDO,\n  KEY_UNDO,\n] = [ 467, 486, 489, 490 ];\n\nexport default class KeyState {\n  constructor(window) {\n    window.addEventListener('keydown', this.onKeyDown.bind(this), false);\n    window.addEventListener('keyup', this.onKeyUp.bind(this), false);\n\n    // this.numKeysDown = 0;\n    this.newKeysDown = {};\n    this.keysDown = {};\n    this.newKeysUp = {};\n  }\n\n  reset() {\n    for (let key in this.newKeysDown) {\n      this.newKeysDown[key] = undefined;\n    }\n    for (let key in this.newKeysUp) {\n      this.newKeysUp[key] = undefined;\n    }\n  }\n\n  onKeyDown(e) {\n    let code = e.keyCode;\n    if (e.metaKey) {\n      code += 400;\n    }\n    this.newKeysDown[code] = code;\n    this.keysDown[code] = code;\n    // Uncomment this to log key codes.\n    // console.log(`keyCode: ${e.keyCode}, key: '${e.key}'`);\n  }\n\n  onKeyUp(e) {\n    let code = e.keyCode;\n    if (e.metaKey) {\n      code += 400;\n    }\n    this.newKeysUp[code] = code;\n    this.keysDown[code] = undefined;\n  }\n\n  isKeyDown(keyCode) {\n    return (this.keysDown[keyCode] === keyCode);\n  }\n\n  isKeyUp(keyCode) {\n    return (this.keysDown[keyCode] !== keyCode);\n  }\n}\n","import dom from './dom'\nimport { renderArea } from './dom'\nimport { removeAll } from '../utility/array'\n\nexport default class RenderLayer {\n  constructor(name, layer) {\n    // Higher number layers cover lower number layers.\n    this.z = layer;\n    this.name = name;\n    const canvas = this.canvas = dom.createCanvas();\n    canvas.id = name;\n    canvas.width = 1920;\n    canvas.height = 1080;\n    canvas.style = `z-index: ${layer}`;\n    this.context = canvas.getContext(\"2d\");\n    this.objects = [];\n    this.isDirty = true;\n    renderArea.appendChild(canvas);\n  }\n\n  getLayer(name) {\n    return this.parent.layer[name];\n  }\n\n  addObject(o) {\n    o.parent = this;\n    o.context = this.context;\n    if (typeof o.z !== 'number') {\n      o.z = 0;\n    }\n    this.objects.push(o);\n    this.isObjectListDirty = true;\n  }\n\n  removeObject(o) {\n    removeAll(this.objects, e => e === o);\n    o.parent = null;\n    o.context = null;\n  }\n\n  clear() {\n    // This will always clear the full canvas.\n    const ctx = this.context;\n    const canvas = this.canvas;\n    let storedTransform = ctx.getTransform();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.setTransform(storedTransform);\n  }\n\n  update(t) {\n    for (const object of this.objects) {\n      const updated = object.update(t);\n      this.isDirty = updated || this.isDirty;\n    }\n    if (this.isObjectListDirty) {\n      // Lower z-order is updated/rendered first. Higher z-order\n      // things will cover lower z-order things.\n      this.objects.sort((a, b) => (a.z - b.z));\n      this.isObjectListDirty = false;\n    }\n  }\n\n  draw() {\n    if (this.isDirty) {\n      this.clear();\n      for (const object of this.objects) {\n        object.draw();\n      }\n      this.isDirty = false;\n    }\n  }\n\n  dispose() {\n    renderArea.removeChild(this.canvas);\n  }\n}\n","import Chain from '../../actions/Chain'\nimport { smoothStop4 } from '../../math/easing'\nimport implementActionList from '../../traits/ActionList'\nimport Colors from '../../settings/Colors'\nimport TextSprite from '../../sprites/TextSprite'\nimport GamepadControlsSprite from '../../sprites/controls/GamepadControlsSprite'\nimport KeyboardControlsSprite from '../../sprites/controls/KeyboardControlsSprite'\nimport MouseState from '../input/MouseState'\nimport KeyState from '../input/KeyState'\nimport { KEY_ENTER } from '../input/KeyState'\nimport RenderLayer from '../RenderLayer'\n\nconst workingTitle = 'Shooooooot!!';\nconst infoText = [\n  'avoid being hit',\n  'point to shoot',\n  'max ammo: 404',\n];\nconst titleFont = '128px verdana';\nconst titleHeight = 128 * 1.25;\nconst textFont = '64px verdana';\nconst textHeight = 64 * 1.25;\nconst startText = 'Click or Press Enter to Start';\n\nexport default class Intro extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n    implementActionList(this);\n\n    this.context.strokeStyle = Colors.enemies;\n    this.context.fillStyle = Colors.player;\n    this.context.lineWidth = 8;\n    this.context.font = textFont;\n    this.context.textAlign = 'center';\n\n    this.titleEase = 0;\n\n    this.addAction(new Chain(1, smoothStop4, this, 'titleEase', .75));\n\n    this.addObject(new KeyboardControlsSprite(100, 100));\n    this.addObject(new GamepadControlsSprite(this.canvas.width - 300, 100));\n    this.keys = new KeyState(window);\n    this.mouse = new MouseState(this.canvas);\n  }\n\n  // Fill background\n  clear() {\n    const ctx = this.context;\n    const canvas = ctx.canvas;\n    let x = canvas.width / 2;\n    let y = canvas.height / 2;\n    ctx.save();\n    const gradient = ctx.createRadialGradient(x, y, canvas.height / 2, x, y, canvas.height * 4/3);\n    gradient.addColorStop(0, Colors.background);\n    gradient.addColorStop(1, Colors.obstacles);\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n    return this;\n  }\n\n  renderTitle() {\n    const ctx = this.context;\n    const canvas = ctx.canvas;\n    let x = canvas.width / 2;\n    let y = canvas.height / 2;\n    let yOffset = canvas.height * 1/10;\n\n    ctx.save();\n    ctx.font = titleFont;\n    if (Math.random() > 0.9) {\n      ctx.shadowBlur = 16;\n      ctx.shadowOffsetX = Math.round(Math.random() * 16 - 8);\n      ctx.shadowOffsetY = Math.round(Math.random() * 16 - 8);\n      ctx.shadowColor = ctx.fillStyle;\n    }\n    ctx.fillText(workingTitle, x, this.titleEase * y - yOffset);\n    ctx.restore();\n  }\n\n  renderInfoText() {\n    const ctx = this.context;\n    const canvas = ctx.canvas;\n    let centerX = canvas.width / 2;\n    let centerY = canvas.height / 2;\n\n    for (let i in infoText) {\n      const t = infoText[i];\n      const x = this.titleEase * centerX;\n      const y = centerY + (i * textHeight);\n      ctx.fillText(t, x, y);\n    }\n  }\n\n  renderNext() {\n    const ctx = this.context;\n    const canvas = ctx.canvas;\n    let centerX = canvas.width / 2;\n    let centerY = canvas.height / 2;\n    let n = infoText.length + 3;\n\n    const x = centerX + (1-this.titleEase) * centerX * 2;\n    const y = centerY + (n * textHeight);\n\n    const savedFill = ctx.fillStyle;\n    const savedStroke = ctx.strokeStyle;\n    ctx.fillStyle = Colors.enemies;\n    ctx.strokeStyle = Colors.enemies;\n    ctx.fillText(startText, x, y);\n    const height = textHeight * 1.1;\n    const width = ctx.measureText(startText).width * 1.1;\n    ctx.strokeRect(x - width / 2, y - height * 0.8, width, height);\n    ctx.fillStyle = savedFill;\n    ctx.strokeStyle = savedStroke;\n  }\n\n  update(t) {\n    super.update(t);\n    this.updateActions(t);\n    if (this.keys.isKeyDown(KEY_ENTER)) {\n      this.parent.start();\n    } else if (this.mouse.isMouseDown) {\n      this.parent.start();\n    }\n    this.isDirty = true;\n  }\n\n  draw() {\n    super.draw();\n    this.renderTitle();\n    this.renderInfoText();\n    this.renderNext();\n  }\n}\n","import Sprite from './Sprite'\n\nexport default class BoxSprite extends Sprite {\n  constructor(x, y, width, height) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  draw() {\n    this.context.strokeRect(this.x, this.y, this.width, this.height);\n  }\n}\n","import Colors from '../../settings/Colors'\nimport RenderLayer from '../RenderLayer'\nimport BoxSprite from '../../sprites/BoxSprite'\n\nconst width = 6;\nconst halfWidth = width / 2;\n\nexport default class Background extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n\n    this.context.strokeStyle = Colors.obstacles;\n    this.context.fillStyle = Colors.obstacles;\n    this.context.lineWidth = width;\n\n    this.addObject(new BoxSprite(halfWidth, halfWidth, this.canvas.width - width, this.canvas.height - width));\n  }\n\n  update(t) {\n    this.checkForBoundaryCollisions();\n    return super.update(t);\n  }\n\n  checkForBoundaryCollisions() {\n    const enemies = this.getLayer('simulation').enemies;\n    const player = this.getLayer('player').player;\n\n    if (this.collidesWithBoundary(player)) {\n      player.explode();\n    }\n    for (const e of enemies) {\n      if (this.collidesWithBoundary(e)) {\n        e.explode();\n      }\n    }\n  }\n\n  aabb() {\n    return {\n      left: halfWidth,\n      top: halfWidth,\n      right: this.canvas.width - width,\n      bottom: this.canvas.height - width,\n    };\n  }\n\n  collidesWithBoundary(s) {\n    const left = halfWidth, top = halfWidth, right = this.canvas.width - width, bottom = this.canvas.height - width;\n    const distance = [\n      s.x - left,\n      right - s.x,\n      s.y - top,\n      bottom - s.y\n    ];\n    for (const d of distance) {\n      if (d < s.radius) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import Sprite from '../Sprite'\nimport Chain from '../../actions/Chain'\nimport { smoothStop4 } from '../../math/easing'\n\n// Number of particles\nconst min = 15;\nconst max = 25;\nconst size = 8;\nconst maxDistance = 300;\nconst duration = 1;\n\nexport default class SpawnSprite extends Sprite {\n  constructor(x, y, enemy) {\n    super();\n    this.x = x + enemy.radius;\n    this.y = y + enemy.radius;\n    this.enemy = enemy;\n    const n = Math.floor(Math.random() * (1 + max - min)) + min;\n    this.particles = new Array(n);\n    for (let i = 0; i < n; ++i) {\n      const angle = Math.random() * Math.PI * 2;\n      this.particles[i] = {\n        length: Math.floor(Math.random() * maxDistance),\n        angle: angle,\n      };\n    }\n    this.duration = duration;\n    this.factor = 0;\n    this.countDown = new Chain(1, smoothStop4, this, 'factor', duration);\n    this.addAction(this.countDown);\n  }\n\n  update(t) {\n    let updated = super.update(t);\n    for (const p of this.particles) {\n      p.x = Math.cos(p.angle) * p.length * (1 - this.factor) + this.x;\n      p.y = Math.sin(p.angle) * p.length * (1 - this.factor) + this.y;\n    }\n    if (this.factor >= 1) {\n      this.parent.addEnemy(this.enemy);\n      this.parent.removeObject(this);\n    }\n    return updated;\n  }\n\n  draw() {\n    for (const p of this.particles) {\n        this.context.fillRect(p.x, p.y, size, size);\n    }\n  }\n}\n","import Sprite from './Sprite'\n\n// Number of particles\nconst min = 15;\nconst max = 25;\nconst size = 5;\nconst minTTL = 0.33;\nconst maxTTL = 1.0;\nconst minSpeed = 8;\nconst maxSpeed = 20;\n\nexport default class ParticleBlastSprite extends Sprite {\n  constructor(x, y, innerRadius, outerRadius) {\n    super();\n    const n = Math.floor(Math.random() * (1 + max - min)) + min;\n    this.particles = new Array(n);\n    const diameter = innerRadius + innerRadius;\n    const left = x - innerRadius;\n    const top = y - innerRadius;\n    for (let i = 0; i < n; ++i) {\n      const angle = Math.random() * Math.PI * 2;\n      const speed = Math.floor(Math.random() * (maxSpeed - minSpeed)) + minSpeed;\n      this.particles[i] = {\n        x: Math.floor(Math.random() * diameter) + left,\n        y: Math.floor(Math.random() * diameter) + top,\n        angle: angle,\n        dx: Math.cos(angle) * speed,\n        dy: Math.sin(angle) * speed,\n        ttl: Math.random() * (maxTTL - minTTL) + minTTL,\n      };\n    }\n  }\n\n  update(t) {\n    let anyAlive = false;\n    for (const p of this.particles) {\n      p.x += p.dx;\n      p.y += p.dy;\n      p.ttl -= t;\n      anyAlive = (p.ttl >=0) || anyAlive;\n    }\n    if (!anyAlive) {\n      this.parent.removeObject(this);\n    }\n    return true;\n  }\n\n  draw() {\n    for (const p of this.particles) {\n      if (p.ttl >= 0) {\n        this.context.fillRect(p.x, p.y, size, size);\n      }\n    }\n  }\n}\n","// ZzFX - Zuper Zmall Zound Zynth - Micro Edition\n// MIT License - Copyright 2019 Frank Force\n// https://github.com/KilledByAPixel/ZzFX\n\n// This is a tiny build of zzfx with only a zzfx function to play sounds.\n// You can use zzfxV to set volume.\n// There is a small bit of optional code to improve compatibility.\n// Feel free to minify it further for your own needs!\n\n// Create randomized sounds here:\n// https://killedbyapixel.github.io/ZzFX/\n\nimport { volume as zzfxV } from '../settings/volume'\nconst zzfxR = 44100 // sample rate\n\nexport default function zzfxInit() {\n  const zzfxX = new AudioContext()\n\n  // ZzFXMicro - Zuper Zmall Zound Zynth\n  return (q = 1, k = .05, c = 220, e = 0, t = 0, u = .1, r = 0, F = 1, v = 0, z = 0, w = 0, A = 0, l = 0, B = 0, x = 0, G = 0, d = 0, y = 1, m = 0, C = 0) => {\n      let b = 2 * Math.PI,\n        H = v *= 500 * b / zzfxR ** 2,\n        I = (0 < x ? 1 : -1) * b / 4,\n        D = c *= (1 + 2 * k * Math.random() - k) * b / zzfxR,\n        Z = [],\n        g = 0,\n        E = 0,\n        a = 0,\n        n = 1,\n        J = 0,\n        K = 0,\n        f = 0,\n        p, h;\n      e = 99 + zzfxR * e;\n      m *= zzfxR;\n      t *= zzfxR;\n      u *= zzfxR;\n      d *= zzfxR;\n      z *= 500 * b / zzfxR ** 3;\n      x *= b / zzfxR;\n      w *= b / zzfxR;\n      A *= zzfxR;\n      l = zzfxR * l | 0;\n      for (h = e + m + t + u + d | 0; a < h; Z[a++] = f) ++K % (100 * G | 0) || (f = r ? 1 < r ? 2 < r ? 3 < r ? Math.sin((g % b) ** 3) : Math.max(Math.min(Math.tan(g), 1), -1) : 1 - (2 * g / b % 2 + 2) % 2 : 1 - 4 * Math.abs(Math.round(g / b) - g / b) : Math.sin(g), f = (l ? 1 - C + C * Math.sin(2 * Math.PI * a / l) : 1) * (0 < f ? 1 : -1) * Math.abs(f) ** F * q * zzfxV * (a < e ? a / e : a < e + m ? 1 - (a - e) / m * (1 - y) : a < e + m + t ? y : a < h - d ? (h - a - d) / u * y : 0), f = d ? f / 2 + (d > a ? 0 : (a < h - d ? 1 : (h - a) / d) * Z[a - d | 0] / 2) : f), p = (c += v += z) * Math.sin(E * x - I), g += p - p * B * (1 - 1E9 * (Math.sin(a) + 1) % 2), E += p - p * B * (1 - 1E9 * (Math.sin(a) ** 2 + 1) % 2), n && ++n > A && (c += w, D += w, n = 0), !l || ++J % l || (c = D, v = H, n = n || 1);\n      q = zzfxX.createBuffer(1, h, zzfxR);\n      q.getChannelData(0).set(Z);\n      c = zzfxX.createBufferSource();\n      c.buffer = q;\n      c.connect(zzfxX.destination);\n      c.start();\n      return c\n    }\n}\n","import Sprite from '../Sprite'\nimport ParticleBlastSprite from '../ParticleBlastSprite'\nimport { removeAll } from '../../utility/array'\nimport zzfxInit from '../../sound/ZzFx'\n\nconst size = 30;\nconst speed = 3;\n\nlet zzfx;\n\nexport default class EnemySprite extends Sprite {\n  constructor(x, y, radius) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this._center = { x, y };\n    this.pointValue = 10;\n    // this.parent set by layer\n    // this.exploded set when exploded\n    if (!zzfx) {\n      zzfx = zzfxInit();\n    }\n  }\n\n  center() {\n    this._center.x = this.x;\n    this._center.y = this.y;\n    return this._center;\n  }\n\n  explode() {\n    if (!this.exploded) {\n      this.parent.addObject(new ParticleBlastSprite(this.x, this.y, this.radius, this.radius * 5));\n      this.incrementScore();\n      this.parent.removeEnemy(this);\n\n      zzfx(1,.05,240,0,.1,.43,2,1.29,3.2,0,0,0,0,1.7,.5,.5,.1,.55,.08,.27); // Hit 93\n    }\n    this.exploded = true;\n  }\n\n  incrementScore() {\n    const player = this.getPlayer();\n    if (!player.exploded) {\n      this.getHud().addScore(this.pointValue);\n    }\n  }\n\n  getPlayer() {\n    return this.getLayer('player').player;\n  }\n\n  getHud() {\n    return this.getLayer('hud');\n  }\n}\n","import EnemySprite from './EnemySprite'\n\nconst size = 25;\nconst speed = 5;\nconst drawWidth = 9;\nconst halfRepelAngle = Math.PI / 6;\n\nexport default class HunterSprite extends EnemySprite {\n  constructor(x, y) {\n    super(x, y, size / 2);\n    x -= size / 2;\n    y -= size / 2;\n    this.x = x;\n    this.y = y;\n    this.width = size;\n    this.height = size;\n    this.pointValue = 15;\n  }\n\n  center() {\n    this._center.x = this.x + size/2;\n    this._center.y = this.y + size/2;\n    return this._center;\n  }\n\n  update(t) {\n    const player = this.getPlayer();\n    if (player) {\n      const playerPosition = player.center();\n      const myPosition = this.center();\n\n      const dx = playerPosition.x - myPosition.x;\n      const dy = playerPosition.y - myPosition.y;\n      if (Math.abs(dx) < speed && Math.abs(dy) < speed) {\n        this.dx = 0;\n        this.dy = 0;\n      } else {\n        let angle = Math.atan2(dy, dx);\n        // when repulsing, make them go faster so the player doesn't crash.\n        let reverseSpeed = 0;\n        // Reverse direction if the player is coming at us.\n        if (this.inRepelArc(angle, player)) {\n          const deviation = Math.random() * (Math.PI / 2) - (Math.PI / 4);\n          angle = fixAngle(angle + Math.PI + deviation);\n          reverseSpeed = 3;\n        }\n        this.dx = Math.cos(angle) * (speed + reverseSpeed);\n        this.dy = Math.sin(angle) * (speed + reverseSpeed);\n      }\n    }\n\n    return super.update(t);\n  }\n\n  inRepelArc(angle, player) {\n    const angleFromPlayer = fixAngle(angle + Math.PI);\n    const playerAngle = fixAngle(player.angle);\n\n    let min = playerAngle - halfRepelAngle;\n    let max = playerAngle + halfRepelAngle;\n\n    if (min < 0) {\n      min += twoPi;\n      return ((angleFromPlayer <= max) && (angleFromPlayer >= 0) || ((angleFromPlayer >= min) && (angleFromPlayer <= twoPi)));\n    } else if (max > twoPi) {\n      max -= twoPi;\n      return ((angleFromPlayer <= max) && (angleFromPlayer >= 0) || ((angleFromPlayer >= min) && (angleFromPlayer <= twoPi)));\n    }\n    return ((angleFromPlayer <= max) && (angleFromPlayer >= min));\n  }\n\n  draw() {\n    const lineWidth = this.context.lineWidth;\n    this.context.lineWidth = drawWidth;\n    this.context.strokeRect(this.x, this.y, this.width, this.height);\n    this.context.lineWidth = lineWidth;\n  }\n}\n\nconst twoPi = Math.PI * 2;\n\n// Return an angle between 0 and twoPi.\nfunction fixAngle(a) {\n  while (a > twoPi) { a -= twoPi; }\n  if (a < 0) { a += twoPi; }\n  return a;\n}\n","import EnemySprite from './EnemySprite'\n\nconst size = 45;\nconst speed = 7;\nconst hitLimit = 3;\n\nexport default class AsteroidSprite extends EnemySprite {\n  constructor(x, y) {\n    super(x, y, size / 2);\n    this.originalRadius = this.radius;\n    this.width = size;\n    this.height = size;\n    const angle = this.angle = Math.random() * 2 * Math.PI;\n    this.dx = Math.cos(angle) * speed;\n    this.dy = Math.sin(angle) * speed;\n    this.hits = 0;\n  }\n\n  getBoundaryBox() {\n    return this.parent.getLayer('background').aabb();\n  }\n\n  setDirection(angle) {\n    this.angle = angle;\n    this.dx = Math.cos(angle) * speed;\n    this.dy = Math.sin(angle) * speed;\n  }\n\n  update(t) {\n    let isDirty = super.update(t);\n    const limit = 40;\n    let bounce = false;\n\n    const canvas = this.context.canvas;\n    const { left, right, top, bottom } = this.getBoundaryBox();\n    const x = this.x;\n    const y = this.y;\n    const radius = this.radius;\n\n    if (x - left < radius) {\n      bounce = true;\n      this.x = (left + radius) + (left + radius) - x;\n      this.dx = -this.dx;\n    } else if (right - x < radius) {\n      bounce = true;\n      this.x = (right - radius) + (right - radius) - x;\n      this.dx = -this.dx;\n    } else if (y - top < radius) {\n      bounce = true;\n      const beyond = (top + radius) - y;\n      this.y = (top + radius) + (top + radius) - y;\n      this.dy = -this.dy;\n    } else if (bottom - y < radius) {\n      bounce = true;\n      const beyond = y - (bottom - radius);\n      this.y = (bottom - radius) + (bottom - radius) - y;\n      this.dy = -this.dy;\n    }\n    if (bounce) {\n      this.angle = Math.atan2(this.dy, this.dx);\n    }\n    return isDirty;\n  }\n\n  draw() {\n    const ctx = this.context;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, 2*Math.PI);\n    ctx.fill();\n  }\n\n  explode() {\n    ++this.hits;\n    this.radius = this.originalRadius * (hitLimit)/(hitLimit+this.hits);\n    if (this.hits >= hitLimit) {\n      super.explode();\n    }\n  }\n}\n","import EnemySprite from './EnemySprite'\nimport Chain from '../../actions/Chain'\nimport { smoothStart3, smoothStop3 } from '../../math/easing'\n\nconst size = 26;\nconst speed = 2;\nconst maxRadius = 100;\nconst minRadius = 50;\nconst startAngle = 0, endAngle = 2 * Math.PI;\n\nexport default class SpiralSprite extends EnemySprite {\n  constructor(x, y) {\n    super(x, y, size / 2);\n    x -= size / 2;\n    y -= size / 2;\n    this.x = x;\n    this.y = y;\n    this.spinX = x;\n    this.spinY = y;\n    this.width = size;\n    this.height = size;\n    this.spiralRadiusEase = 0;\n    this.spiralAngleEase = 0;\n    this.spiralAngle = Math.random() * 2 * Math.PI;\n    this.spinDirection = Math.round(Math.random()) ? -1 : 1;\n    const spiralGrowth = new Chain(1, smoothStart3, this, 'spiralRadiusEase', 1 + Math.random());\n    const spiralShrink = new Chain(-1, smoothStop3, this, 'spiralRadiusEase', 1 + Math.random());\n    this.addAction(spiralGrowth.then(spiralShrink).then(spiralGrowth));\n  }\n\n  center() {\n    this._center.x = this.x + size/2;\n    this._center.y = this.y + size/2;\n    return this._center;\n  }\n\n  update(t) {\n    this.spiralAngleEase += (this.spinDirection*t);\n    let isDirty = super.update(t);\n\n    // Move toward the player\n    const player = this.getPlayer();\n    if (player) {\n      const playerPosition = player.center();\n      const dx = playerPosition.x - this.spinX;\n      const dy = playerPosition.y - this.spinY;\n      if (Math.abs(dx) < speed && Math.abs(dy) < speed) {\n        this.dx = 0;\n        this.dy = 0;\n      } else {\n        const angle = Math.atan2(dy, dx);\n        this.dx = Math.cos(angle) * speed;\n        this.dy = Math.sin(angle) * speed;\n      }\n    }\n    this.spinX += this.dx;\n    this.spinY += this.dy;\n\n    // Spin around \"my location\"\n    const angle = this.spiralAngle + this.spiralAngleEase * 2 * Math.PI;\n    const radius = (0.5 + this.spiralRadiusEase) * maxRadius;\n    let x = this.spinX + Math.cos(angle) * radius;\n    let y = this.spinY + Math.sin(angle) * radius;\n\n    this.x = x //+ this.dx;\n    this.y = y //+ this.dy;\n\n    return isDirty || true;\n  }\n\n  draw() {\n    const c = this;\n    const ctx = this.context;\n    ctx.beginPath();\n    ctx.arc(c.x, c.y, c.radius, startAngle, endAngle);\n    ctx.stroke();\n  }\n}\n","import EnemySprite from './EnemySprite'\nimport Chain from '../../actions/Chain'\nimport { smoothStart4 } from '../../math/easing'\nimport Colors from '../../settings/Colors'\nimport zzfxInit from '../../sound/ZzFx'\n\nconst size = 30;\nconst baseSpeed = 0.5;\n\nlet zzfx;\n\nexport default class AmmoDropSprite extends EnemySprite {\n  constructor(x, y) {\n    super(x, y, size / 2);\n    this.pointValue = 0;\n    this.acceleration = 1;\n    this.addAction(new Chain(1, smoothStart4, this, 'acceleration', 2.5));\n    if (!zzfx) {\n      zzfx = zzfxInit();\n    }\n  }\n\n  update(t) {\n    const player = this.getPlayer();\n    const speed = baseSpeed * this.acceleration;\n    if (player) {\n      const playerPosition = player.center();\n      const myPosition = this.center();\n\n      const dx = playerPosition.x - myPosition.x;\n      const dy = playerPosition.y - myPosition.y;\n\n      const angle = Math.atan2(dy, dx) + Math.PI;\n      this.dx = Math.cos(angle) * speed;\n      this.dy = Math.sin(angle) * speed;\n    }\n\n    return super.update(t) || true;\n  }\n\n  draw() {\n    const ctx = this.context;\n    ctx.save();\n    ctx.fillStyle = Colors.obstacles;\n    ctx.strokeStyle = Colors.background;\n    ctx.lineWidth = 3;\n    ctx.lineCap = 'round';\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, 2*Math.PI);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.moveTo(this.x - this.radius/2, this.y);\n    ctx.lineTo(this.x + this.radius/2, this.y);\n    ctx.moveTo(this.x, this.y - this.radius/2);\n    ctx.lineTo(this.x, this.y + this.radius/2);\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  absorb() {\n    if (!this.exploded) {\n      this.pointValue = 50;\n      this.incrementScore();\n      this.incrementAmmo();\n      this.parent.removeEnemy(this);\n\n      zzfx(1,.05,1719,0,.09,.11,1,1.14,0,0,992,.08,.02,.1,0,0,0,.7,.01,0); // Pickup 110\n    }\n    this.exploded = true;\n  }\n\n  incrementAmmo() {\n    const player = this.getPlayer();\n    if (!player.exploded) {\n      this.getHud().addAmmo(this.pointValue);\n    }\n  }\n\n}\n","export function vector(x, y) { return { x: x, y: y }; }\n\nexport function origin() { return vector(0, 0); }\n\nexport function sqr(x) {\n  return x * x;\n}\n\nexport function distanceSquared(v, w) {\n  return sqr(v.x - w.x) + sqr(v.y - w.y);\n}\n\nexport function distance(v, w) {\n  return Math.sqrt(distanceSquared(v, w));\n}\n\n// Angle of vector from v to w, relative to y axis.\nexport function angle(v, w) {\n  const dx = w.x - v.x;\n  const dy = w.y - v.y;\n  return Math.atan2(dy, dx);\n}\n\nexport function distToSegmentSquared(p, v, w) {\n  const l2 = distanceSquared(v, w);\n  if (l2 === 0) return distanceSquared(p, v);\n  let t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2;\n  t = Math.max(0, Math.min(1, t));\n  return distanceSquared(p, {\n    x: v.x + t * (w.x - v.x),\n    y: v.y + t * (w.y - v.y)\n  });\n}\n\n// Computes the minimum distance from a point p to line segment\n// between v and w.\nexport function distToSegment(p, v, w) {\n  return Math.sqrt(distToSegmentSquared(p, v, w));\n}\n\nexport function getPointOnCircle(circle, angle) {\n  return vector(\n    Math.cos(angle) * circle.radius + circle.x,\n    Math.sin(angle) * circle.radius + circle.y\n  );\n}\n","import Chain from './Chain'\n\nconst dummyObject = {};\nconst dummyProperty = 'property';\n\nexport default class TimedEvent extends Chain {\n  constructor(callback, delay) {\n    super(0, (t) => {\n      if (t === 1) {\n        callback();\n      }\n    }, dummyObject, dummyProperty, delay);\n  }\n}\n","import Colors from '../../settings/Colors'\nimport RenderLayer from '../RenderLayer'\nimport SpawnSprite from '../../sprites/enemies/SpawnSprite'\nimport SeekerSprite from '../../sprites/enemies/SeekerSprite'\nimport HunterSprite from '../../sprites/enemies/HunterSprite'\nimport AsteroidSprite from '../../sprites/enemies/AsteroidSprite'\nimport SpiralSprite from '../../sprites/enemies/SpiralSprite'\nimport AmmoDropSprite from '../../sprites/enemies/AmmoDropSprite'\n\nimport { removeAll } from '../../utility/array'\nimport { angle, distanceSquared } from '../../math/vector2'\nimport TimedEvent from '../../actions/TimedEvent'\nimport implementActionList from '../../traits/ActionList'\n\nconst spawnInterval = 5;\nconst ammoProbability = 0.15;\n\n// Add EnemySprite types here to include in random spawning.\nconst enemyTypes = [\n  SeekerSprite,\n  HunterSprite,\n  AsteroidSprite,\n  SpiralSprite,\n];\n\nconst spawnPatterns = [\n  'boxSpawn',\n  'cornerSpawn',\n  'sideSpawn',\n];\n\n// Returns a value in [0, n-1].\nfunction randomInt(n) {\n  return Math.floor(Math.random() * n);\n}\n\nfunction randomSelection(array) {\n  const n = array.length;\n  const i = randomInt(n);\n  return array[i];\n}\n\nexport default class Simulation extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n\n    this.context.strokeStyle = Colors.enemies;\n    this.context.fillStyle = Colors.enemies;\n    this.context.lineWidth = 4;\n\n    this.enemies = [];\n\n    implementActionList(this);\n\n    let spawnEvent = new TimedEvent(this.spawn.bind(this), spawnInterval);\n    spawnEvent.then(spawnEvent);\n    this.spawnTimer = spawnEvent;\n    this.addAction(this.spawnTimer);\n    this.spawn();\n  }\n\n  update(t) {\n    const updated = super.update(t);\n    this.checkForEnemyOnEnemyCollisions()\n    return this.updateActions(t) || updated;\n  }\n\n  spawn() {\n    const T = randomSelection(enemyTypes);\n    const pattern = randomSelection(spawnPatterns);\n    this[pattern](T);\n  }\n\n  boxSpawn(T) {\n    const xOffset = Math.floor(this.canvas.width / 8 + Math.random() * (this.canvas.width / 4));\n    const yOffset = Math.floor(this.canvas.height / 8 + Math.random() * (this.canvas.height / 4));\n\n    let x = [xOffset, this.canvas.width / 2, this.canvas.width - xOffset];\n    let y = [yOffset, this.canvas.height / 2, this.canvas.height - yOffset];\n\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (i == 1 && j === 1) continue;\n        let e = new T(x[i], y[j]);\n        this.spawnEnemy(e);\n      }\n    }\n  }\n\n  cornerSpawn(T) {\n    const d = Math.floor(this.canvas.height / (Math.random() * 4 + 3));\n    const top = d, left = d, bottom = (this.canvas.height - d), right = (this.canvas.width - d);\n    const enemies = [];\n    this.addCluster(enemies, T, left + randomInt(100), top + randomInt(100));\n    this.addCluster(enemies, T, right - randomInt(100), bottom - randomInt(100));\n    this.addCluster(enemies, T, right - randomInt(100), top + randomInt(100));\n    this.addCluster(enemies, T, left + randomInt(100), bottom);\n    for (const e of enemies) {\n      this.spawnEnemy(e);\n    }\n  }\n\n  sideSpawn(T) {\n    let x = randomInt(this.canvas.width - 400) + 200;\n    let y = randomInt(this.canvas.height - 400) + 200;\n\n    const n = 5;\n    const dx = Math.floor(this.canvas.width / (n+2));\n    const dy = Math.floor(this.canvas.height / (n+2));\n    if (Math.random() < 0.5) {\n      for (let i = 1; i <= n; ++i) {\n        this.spawnEnemy(new T(x + randomInt(50), i * dy + randomInt(50)));\n        this.spawnEnemy(new T(x - randomInt(50) - 50, i * dy + randomInt(50)));\n      }\n    } else {\n      for (let i = 1; i <= n; ++i) {\n        this.spawnEnemy(new T(i * dx + randomInt(50), y + randomInt(50)));\n        this.spawnEnemy(new T(i * dx + randomInt(50), y - randomInt(50) - 50));\n      }\n    }\n  }\n\n  addCluster(enemies, T, x, y) {\n    const offset = randomInt(20) + 60;\n    enemies.push(new T(x, y));\n    enemies.push(new T(x + offset, y + offset));\n    enemies.push(new T(x, y + offset));\n    enemies.push(new T(x + offset, y));\n  }\n\n  spawnEnemy(e) {\n    if (Math.random() <= ammoProbability) {\n      e = new AmmoDropSprite(e.x, e.y);\n    }\n    this.addObject(new SpawnSprite(e.x, e.y, e));\n  }\n\n  addEnemy(e) {\n    this.enemies.push(e);\n    this.addObject(e);\n  }\n\n  removeEnemy(o) {\n    removeAll(this.enemies, e => e === o);\n    this.removeObject(o);\n  }\n\n  checkForEnemyOnEnemyCollisions() {\n    const enemies = this.enemies;\n    for (let i = 0; i < enemies.length; ++i) {\n      for (let j = i + 1; j < enemies.length; ++j) {\n        const a = enemies[i];\n        const b = enemies[j];\n        if (this.isCollision(a, b)) {\n          if (a instanceof AsteroidSprite) {\n            if (b instanceof AsteroidSprite) {\n              // bounce\n              const angleAB = angle(a, b);\n              a.setDirection(angleAB - Math.PI);\n              b.setDirection(angleAB);\n            }\n            // explode after bounce, or else one or both could be dead.\n            a.explode();\n            b.explode();\n          } else if (b instanceof AsteroidSprite) {\n            a.explode();\n            b.explode();\n          }\n        }\n      }\n    }\n  }\n\n  isCollision(a, b) {\n    const collideAt = a.radius + b.radius;\n    return (distanceSquared(a.center(), b.center()) <= (collideAt * collideAt));\n  }\n}\n","import EnemySprite from './EnemySprite'\nimport Chain from '../../actions/Chain'\nimport { smoothStart5 } from '../../math/easing'\n\nconst size = 30;\nconst baseSpeed = 3;\n\nexport default class SeekerSprite extends EnemySprite {\n  constructor(x, y) {\n    super(x, y, size / 2);\n    x -= size / 2;\n    y -= size / 2;\n    this.x = x;\n    this.y = y;\n    this.width = size;\n    this.height = size;\n    this.acceleration = 1;\n    this.addAction(new Chain(0.75, smoothStart5, this, 'acceleration', 2.5));\n  }\n\n  center() {\n    this._center.x = this.x + size/2;\n    this._center.y = this.y + size/2;\n    return this._center;\n  }\n\n  update(t) {\n    const player = this.getPlayer();\n    const speed = baseSpeed * this.acceleration;\n    if (player) {\n      const playerPosition = player.center();\n      const myPosition = this.center();\n\n      const dx = playerPosition.x - myPosition.x;\n      const dy = playerPosition.y - myPosition.y;\n      if (Math.abs(dx) < speed && Math.abs(dy) < speed) {\n        this.dx = 0;\n        this.dy = 0;\n      } else {\n        const angle = Math.atan2(dy, dx);\n        this.dx = Math.cos(angle) * speed;\n        this.dy = Math.sin(angle) * speed;\n      }\n    }\n\n    return super.update(t);\n  }\n\n  draw() {\n    this.context.strokeRect(this.x, this.y, this.width, this.height);\n  }\n}\n","import Sprite from './Sprite'\n\nconst startAngle = 0, endAngle = 2 * Math.PI;\n\nexport default class CircleSprite extends Sprite {\n  constructor(x, y, radius) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n  }\n\n  draw() {\n    const ctx = this.context;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, startAngle, endAngle);\n    ctx.stroke();\n  }\n}\n","import CircleSprite from './CircleSprite'\n\nconst startAngle = 0, endAngle = 2 * Math.PI;\n\nexport default class BulletSprite extends CircleSprite {\n  constructor(x, y, radius) {\n    super(x, y, radius);\n  }\n\n  update(t) {\n    // If the bullet is out of bounds, remove it.\n    if (this.x < 0 || this.y < 0 || this.x > this.parent.canvas.width || this.y > this.parent.canvas.height) {\n      this.parent.removeBullet(this);\n      return true;\n    }\n    return super.update(t);\n  }\n}\n","import Sprite from './Sprite'\nimport BulletSprite from './BulletSprite'\nimport ParticleBlastSprite from './ParticleBlastSprite'\nimport { KEY_LEFT, KEY_UP, KEY_RIGHT, KEY_DOWN } from '../world/input/KeyState'\nimport { KEY_W, KEY_A, KEY_S, KEY_D } from '../world/input/KeyState'\nimport { KEY_SPACE } from '../world/input/KeyState'\nimport TimedEvent from '../actions/TimedEvent'\nimport zzfxInit from '../sound/ZzFx'\nimport { showCursor, hideCursor } from '../world/dom'\n\nconst startAngle = 0, endAngle = 2 * Math.PI;\nconst speed = 5;\nconst acceleration = 0.2;\nconst analogDeadZone = 0.2;\nconst analogDeadZoneSquared = analogDeadZone * analogDeadZone;\n\n// Reach this score to upgrade guns. More shots uses more ammo, though.\nconst level1Guns = 500;\nconst level2Guns = 1500;\n\n// x or y at PI/4\nconst normalizer = Math.sqrt(2)/2;\n\nconst leftThumbstickHorizontal = 0;\nconst leftThumbstickVertical = 1;\nconst rightThumbstickHorizontal = 2;\nconst rightThumbstickVertical = 3;\n\nlet zzfx;\n\nexport default class PlayerSprite extends Sprite {\n  constructor(x, y, radius) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this._center = {};\n\n    this.aim = { dx: 0, dy: 0 };\n    this.lastAim = { dx: 0, dy: 0 };\n\n    let shoot = new TimedEvent(this.shoot.bind(this), 0.2);\n    shoot.then(shoot);\n    this.shootAction = shoot;\n    this.ammo = 404;\n    this.shots = 1;\n\n    this.showCursor();\n\n    if (!zzfx) {\n      zzfx = zzfxInit();\n    }\n  }\n\n  showCursor() {\n    if (this.isUsingGamepad) {\n      showCursor();\n      this.isUsingGamepad = false;\n    }\n  }\n\n  hideCursor() {\n    if (!this.isUsingGamepad) {\n      hideCursor();\n      this.isUsingGamepad = true;\n    }\n  }\n\n  startShooting() {\n    this.addAction(this.shootAction);\n  }\n\n  stopShooting() {\n    this.removeAction(this.shootAction);\n  }\n\n  magnitude({dx, dy}) {\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  shoot() {\n    switch (this.shots) {\n      case 1:\n        this.shoot1();\n        break;\n      case 2:\n        this.shoot2();\n        break;\n      case 3:\n        this.shoot3();\n        break;\n    }\n  }\n\n  shoot1() {\n    if (!this.inDeadZone(this.aim.dx, this.aim.dy) && this.ammo) {\n      const x = this.x + this.aim.dx * this.radius;\n      const y = this.y + this.aim.dy * this.radius;\n      const bullet = new BulletSprite(x, y, 5);\n      // Normalize the aim so shots are always the same speed even when\n      // tapping lightly on the analog stick.\n      const magnitude = this.magnitude(this.aim);\n      bullet.dx = this.aim.dx / magnitude * speed * 2;\n      bullet.dy = this.aim.dy / magnitude * speed * 2;\n      this.parent.addBullet(bullet);\n      this.decrementAmmo(1);\n      zzfx(1,.05,31,.04,0,.08,1,.17,0,0,0,0,.03,0,0,0,0,.23,.01,0); // Blip 97\n    }\n  }\n\n  shoot2() {\n    if (!this.inDeadZone(this.aim.dx, this.aim.dy) && this.ammo > 1) {\n      const x = this.x + this.aim.dx * this.radius;\n      const y = this.y + this.aim.dy * this.radius;\n      const angle = Math.atan2(this.aim.dy, this.aim.dx);\n      const stepX = Math.cos(angle + Math.PI/2) * 5;\n      const stepY = Math.sin(angle + Math.PI/2) * 5;\n\n      let bullet;\n      bullet = new BulletSprite(x + stepX, y + stepY, 5);\n      bullet.dx = Math.cos(angle + Math.PI/90) * speed * 2;\n      bullet.dy = Math.sin(angle + Math.PI/90) * speed * 2;\n      this.parent.addBullet(bullet);\n      bullet = new BulletSprite(x - stepX, y - stepY, 5);\n      bullet.dx = Math.cos(angle - Math.PI/90) * speed * 2;\n      bullet.dy = Math.sin(angle - Math.PI/90) * speed * 2;\n      this.parent.addBullet(bullet);\n\n      this.decrementAmmo(2);\n      zzfx(1,.05,31,.04,0,.08,1,.17,0,0,0,0,.03,0,0,0,0,.23,.01,0); // Blip 97\n      zzfx(1,.05,31,.04,0,.08,1,.17,0,0,0,0,.03,0,0,0,0,.23,.01,0); // Blip 97\n    }\n  }\n\n  shoot3() {\n    this.shoot2();\n    this.shoot1();\n  }\n\n  decrementAmmo(amount) {\n    this.ammo = this.getLayer('hud').decrementAmmo(amount);\n  }\n\n  updateGuns() {\n    const score = this.getLayer('hud').addScore(0);\n    if (score > level2Guns) {\n      this.shots = 3;\n    } else if (score > level1Guns) {\n      this.shots = 2;\n    }\n  }\n\n  updateVelocity(gp) {\n    let dx = 0, dy = 0;\n\n    if (gp) {\n      dx = gp.axes[leftThumbstickHorizontal];\n      dy = gp.axes[leftThumbstickVertical];\n\n      // Prevent drift when sticks aren't really pushed in any direction.\n      if (this.inDeadZone(dx, dy)) {\n        dx = 0;\n        dy = 0;\n      }\n    }\n\n    let keyInput = false;\n    if (this.parent.keys.isKeyDown(KEY_LEFT) || this.parent.keys.isKeyDown(KEY_A)) { dx -= 1; keyInput = true; }\n    if (this.parent.keys.isKeyDown(KEY_RIGHT) || this.parent.keys.isKeyDown(KEY_D)) { dx += 1; keyInput = true; }\n    if (this.parent.keys.isKeyDown(KEY_UP) || this.parent.keys.isKeyDown(KEY_W)) { dy -= 1; keyInput = true; }\n    if (this.parent.keys.isKeyDown(KEY_DOWN) || this.parent.keys.isKeyDown(KEY_S)) { dy += 1; keyInput = true; }\n    // Fix this so it normalizes the diagonal speed.\n    if (keyInput && dx && dy) {\n      dx *= normalizer;\n      dy *= normalizer;\n    }\n\n    this.dx = speed * dx;\n    this.dy = speed * dy;\n    this.angle = Math.atan2(dy, dx);\n  }\n\n  inDeadZone(x, y) {\n    return (x * x + y * y < analogDeadZoneSquared);\n  }\n\n  getMouse() {\n    return this.getLayer('hud').mouse;\n  }\n\n  updateAim(gp) {\n    let dx = 0, dy = 0;\n\n    if (gp) {\n      dx = gp.axes[rightThumbstickHorizontal];\n      dy = gp.axes[rightThumbstickVertical];\n      // Prevent drift when sticks aren't really pushed in any direction.\n      if (this.inDeadZone(dx, dy)) {\n        dx = 0;\n        dy = 0;\n      } else {\n        this.hideCursor();\n      }\n    }\n\n    // Space bar to shoot straight ahead\n    const mouse = this.getMouse();\n    if (mouse.isMouseDown) {\n      const angle = Math.atan2(mouse.current.y - this.y, mouse.current.x - this.x);\n      dx = Math.cos(angle);\n      dy = Math.sin(angle);\n      this.showCursor();\n    }\n\n    this.lastAim.dx = this.aim.dx;\n    this.lastAim.dy = this.aim.dy;\n    this.aim.dx = dx;\n    this.aim.dy = dy;\n    this.aim.angle = Math.atan2(dy, dx);\n\n    if ((this.inDeadZone(this.lastAim.dx, this.lastAim.dy) && !this.inDeadZone(this.aim.dx, this.aim.dy))) {\n      this.startShooting();\n      this.shoot();\n    } else if (!this.inDeadZone(this.lastAim.dx, this.lastAim.dy) && this.inDeadZone(this.aim.dx, this.aim.dy)) {\n      this.stopShooting();\n    }\n    return this.lastAim.dx !== dx || this.lastAim.dy !== dy;\n  }\n\n  explode() {\n    if (!this.exploded) {\n      // explode the player and game over\n      this.stopShooting();\n      this.parent.addObject(new ParticleBlastSprite(this.x, this.y, this.radius, this.radius * 5));\n      zzfx(1,.05,776,0,.21,.83,4,4.8,0,1,0,0,0,.6,.2,.6,0,.94,.09,.41); // Explosion 83\n    }\n    this.exploded = true;\n  }\n\n  update(t) {\n    // Refresh ammo count from HUD\n    this.decrementAmmo(0);\n    this.updateGuns();\n\n    if (!this.exploded) {\n      const gp = navigator.getGamepads()[0];\n      this.updateVelocity(gp);\n\n      let aimUpdated = this.updateAim(gp);\n\n      return super.update(t) || aimUpdated;\n    }\n  }\n\n  center() {\n    this._center.x = this.x;\n    this._center.y = this.y;\n    return this._center;\n  }\n\n  draw() {\n    const ctx = this.context;\n    if (!this.exploded) {\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.radius, startAngle, endAngle);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.arc(this.x + this.aim.dx * this.radius, this.y + this.aim.dy * this.radius, 5, startAngle, endAngle);\n      ctx.stroke();\n    }\n  }\n}\n","import Colors from '../../settings/Colors'\nimport RenderLayer from '../RenderLayer'\nimport PlayerSprite from '../../sprites/PlayerSprite'\nimport TextSprite from '../../sprites/TextSprite'\nimport AmmoDropSprite from '../../sprites/enemies/AmmoDropSprite'\nimport KeyState from '../input/KeyState'\nimport { removeAll } from '../../utility/array'\nimport { distanceSquared } from '../../math/vector2'\n\nexport default class Player extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n\n    this.context.strokeStyle = Colors.player;\n    this.context.fillStyle = Colors.player;\n    this.context.lineWidth = 4;\n    this.context.font = '64px serif';\n\n    this.player = new PlayerSprite(this.canvas.width / 2, this.canvas.height / 2, 20);\n    this.addObject(this.player);\n\n    this.keys = new KeyState(window);\n\n    this.bullets = [];\n  }\n\n  addBullet(bullet) {\n    this.bullets.push(bullet);\n    this.addObject(bullet);\n  }\n\n  removeBullet(o) {\n    removeAll(this.bullets, e => e === o);\n    this.removeObject(o);\n  }\n\n  update(t) {\n    const updated = super.update(t);\n    // Check if player has exploded\n    if (this.player.exploded) {\n      this.parent.gameOver();\n    }\n    // Check for bullet collisions\n    this.checkForBulletCollisions();\n    // Check for enemy collisions\n    this.checkForEnemyCollisions();\n    return updated;\n  }\n\n  checkForBulletCollisions() {\n    const enemies = this.getLayer('simulation').enemies;\n    const dead = [];\n    for (const b of this.bullets) {\n      for (const e of enemies) {\n        const collideAt = b.radius + e.radius;\n        if (distanceSquared(b, e.center()) < (collideAt * collideAt)) {\n          // Crash!\n          dead.push(b);\n          e.explode();\n        }\n      }\n    }\n    for (const d of dead) {\n      this.removeBullet(d);\n    }\n  }\n\n  checkForEnemyCollisions() {\n    const enemies = this.getLayer('simulation').enemies;\n    for (const e of enemies) {\n      const collideAt = this.player.radius + e.radius;\n      if (distanceSquared(this.player, e.center()) < (collideAt * collideAt)) {\n        // Crash!\n        if (e instanceof AmmoDropSprite) {\n          e.absorb();\n        } else {\n          e.explode();\n          this.player.explode();\n          this.parent.gameOver();\n        }\n      }\n    }\n  }\n}\n","import MouseState from '../input/MouseState'\nimport Colors from '../../settings/Colors'\nimport RenderLayer from '../RenderLayer'\nimport TextSprite from '../../sprites/TextSprite'\nimport { smoothStart2, smoothStop4 } from '../../math/easing'\nimport Chain from '../../actions/Chain'\n\nconst textFont = '64px verdana';\nconst textHeight = 64 * 1.25;\nconst ammoMax = 404;\n\nexport default class Hud extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n\n    this.context.strokeStyle = Colors.player;\n    this.context.fillStyle = Colors.player;\n    this.context.lineWidth = 4;\n    this.context.font = textFont;\n\n    this.score = 0;\n    this.ammo = ammoMax;\n\n    this.scoreSprite = new TextSprite('score: 0', 50, textHeight);\n    this.scoreSprite.state = 'visible';\n    this.addObject(this.scoreSprite);\n    this.ammoSprite = new TextSprite(`ammo: ${this.ammo}`, this.canvas.width - 430, textHeight);\n    this.ammoSprite.state = 'visible';\n    this.addObject(this.ammoSprite);\n\n    this.mouse = new MouseState(this.canvas);\n  }\n\n  addScore(amount) {\n    this.isDirty = true;\n    this.score += amount;\n    return this.score;\n  }\n\n  addAmmo(amount) {\n    this.isDirty = true;\n    this.ammo = Math.min(ammoMax, this.ammo + amount);\n    return this.ammo;\n  }\n\n  decrementAmmo(amount = 1) {\n    this.isDirty = true;\n    this.ammo = Math.max(0, this.ammo - amount);\n    return this.ammo;\n  }\n\n  setAmmo(value) {\n    if (this.ammo != value) {\n      this.ammo = value;\n      this.isDirty = true;\n    }\n  }\n\n  getPlayer() {\n    return this.getLayer('player').player;\n  }\n\n  hideText(sprite) {\n    const moveOff = new Chain(-textHeight * 1.5, smoothStart2, sprite, 'y', 0.25);\n    sprite.addAction(moveOff);\n    sprite.state = 'hiding';\n  }\n\n  showText(sprite) {\n    const moveOn = new Chain(textHeight * 1.5, smoothStop4, sprite, 'y', 0.33);\n    sprite.addAction(moveOn);\n    sprite.state = 'unhiding';\n  }\n\n  updateState(sprite) {\n    if (sprite.state === 'hiding' && sprite.actions.length === 0) {\n      sprite.state = 'hidden';\n    } else if (sprite.state === 'unhiding' && sprite.actions.length === 0) {\n      sprite.state = 'visible';\n    }\n  }\n\n  update(t) {\n    if (this.isDirty) {\n      this.scoreSprite.setText(`score: ${this.score}`);\n      this.ammoSprite.setText(`ammo: ${this.ammo}`);\n    }\n    this.updateState(this.scoreSprite);\n    this.updateState(this.ammoSprite);\n\n    let player = this.getPlayer();\n    if (player.exploded) {\n      player = {\n        x: this.canvas.width,\n        y: this.canvas.height,\n      };\n    }\n    const inTopRange = (player.y < textHeight * 2);\n    if (inTopRange && player.x < 500) {\n      if (this.scoreSprite.state === 'visible') {\n        this.hideText(this.scoreSprite);\n      }\n    } else if (inTopRange && player.x > (this.canvas.width - 500)) {\n      if (this.ammoSprite.state === 'visible') {\n        this.hideText(this.ammoSprite);\n      }\n    } else if (this.scoreSprite.state === 'hidden') {\n      this.showText(this.scoreSprite);\n    } else if (this.ammoSprite.state === 'hidden') {\n      this.showText(this.ammoSprite);\n    }\n    return super.update(t);\n  }\n}\n","import Chain from '../../actions/Chain'\nimport { smoothStop4 } from '../../math/easing'\nimport implementActionList from '../../traits/ActionList'\nimport Colors from '../../settings/Colors'\nimport TextSprite from '../../sprites/TextSprite'\nimport KeyState from '../input/KeyState'\nimport { KEY_ENTER } from '../input/KeyState'\nimport RenderLayer from '../RenderLayer'\n\nconst textFont = '96px verdana';\nconst textHeight = 96 * 1.25;\nconst infoFont = '64px verdana';\nconst infoHeight = 64 * 1.25;\n\nexport default class GameOver extends RenderLayer {\n  constructor(name, layer) {\n    super(name, layer);\n    implementActionList(this);\n\n    this.context.strokeStyle = Colors.enemies;\n    this.context.fillStyle = Colors.player;\n    this.context.lineWidth = 8;\n    this.context.font = textFont;\n    this.context.textAlign = 'center';\n\n    this.addAction(new Chain(1, smoothStop4, this, 'ease', .75));\n    this.keys = new KeyState(window);\n\n    this.gameText = new TextSprite('GAME', this.canvas.width / 2, 0 - textHeight);\n    this.overText = new TextSprite('OVER', this.canvas.width / 2, this.canvas.height);// + textHeight);\n    this.addObject(this.gameText);\n    this.addObject(this.overText);\n    this.addAction(new Chain(this.canvas.height / 2, smoothStop4, this.gameText, 'y', 0.5));\n    this.addAction(new Chain(-this.canvas.height / 2, smoothStop4, this.overText, 'y', 0.5));\n  }\n\n  showMessage(message) {\n    const highScore = new TextSprite(message, this.canvas.width / 2, this.canvas.height + textHeight);\n    this.addObject(highScore);\n    this.addAction(new Chain(-this.canvas.height / 2 + textHeight, smoothStop4, highScore, 'y', 1.5));\n  }\n\n  update(t) {\n    super.update(t);\n    this.updateActions(t);\n    const gp = navigator.getGamepads()[0];\n    if (this.keys.isKeyDown(KEY_ENTER)) {\n      this.parent.start();\n    } else if (gp && gp.buttons[0].pressed) {\n      this.parent.start();\n    }\n    this.isDirty = true;\n  }\n\n  draw() {\n    super.draw();\n    const ctx = this.context;\n    ctx.save();\n    ctx.font = infoFont;\n    ctx.fillStyle = Colors.enemies;\n    const x = this.canvas.width / 2;\n    const y = this.canvas.height - infoHeight - infoHeight;\n    ctx.fillText('Press Enter or Button 0 to Restart', x, y);\n    ctx.restore();\n  }\n}\n","// main\n\nimport GameLoop from './world/GameLoop'\nimport World from './world/World'\n\nlet world = new World();\n\nlet gameLoop = new GameLoop(update, draw);\ngameLoop.start();\n\n// Draw the frame\nfunction draw() {\n  world.draw();\n}\n\n// Update the world (with milliseconds elapsed since last update)\nfunction update(elapsed) {\n  world.update(elapsed);\n}\n","import { renderArea } from './dom'\nimport Colors from '../settings/Colors'\nimport { mute, unmute } from '../settings/volume'\nimport Intro from './layers/Intro'\nimport Background from './layers/Background'\nimport Simulation from './layers/Simulation'\nimport Player from './layers/Player'\nimport Hud from './layers/Hud'\nimport GameOver from './layers/GameOver'\n\nexport default class World {\n  constructor() {\n    this.gameIsStarted = false;\n    this.gameIsOver = false;\n    renderArea.style.background = Colors.background;\n    this.layer = {};\n    this.layers = [];\n    this.highScore = 0;\n\n    this.intro();\n  }\n\n  addLayer(layer) {\n    layer.parent = this;\n    this.layer[layer.name] = layer;\n    this.layers.push(layer);\n  }\n\n  resetLayers() {\n    for (const l of this.layers) {\n      l.parent = null;\n      l.dispose();\n    }\n    this.layers.length = 0;\n    this.layer = {};\n  }\n\n  update(elapsed) {\n    for (const layer of this.layers) {\n      layer.update(elapsed)\n    }\n\n    if (this.gameIsStarted && !this.gameIsOver && this.layer.player.player.exploded) {\n      this.gameOver();\n    }\n  }\n\n  draw() {\n    for (const layer of this.layers) {\n      layer.draw();\n    }\n  }\n\n  intro() {\n    this.resetLayers();\n    this.addLayer(new Intro('intro', 0));\n  }\n\n  start() {\n    this.resetLayers();\n    unmute();\n    this.addLayer(new Background('background', 0));\n    this.addLayer(new Simulation('simulation', 1));\n    this.addLayer(new Player('player', 2));\n    this.addLayer(new Hud('hud', 3));\n    this.gameIsOver = false;\n  }\n\n  gameOver() {\n    if (!this.gameIsOver) {\n      mute();\n      this.addLayer(new GameOver('gameover', 4));\n      this.gameIsOver = true;\n      const latestScore = this.layer.hud.score;\n      if (latestScore > this.highScore) {\n        // New high score!\n        this.highScore = latestScore;\n        this.layer.gameover.showMessage(`New High Score: ${latestScore}!!`);\n      } else {\n        this.layer.gameover.showMessage(`Score to Beat: ${this.highScore}`);\n      }\n    }\n  }\n}\n","const maxTick = 1/15;\n\nexport default class GameLoop {\n  constructor(update, draw) {\n    this.update = update;\n    this.draw = draw;\n    this.nextTick = this.tick.bind(this);\n  }\n\n  start() {\n    const firstTick = this.init.bind(this);\n    window.requestAnimationFrame(firstTick);\n  }\n\n  // In the very first frame, we want elapsedTime to be zero.\n  init(timeStamp) {\n    this.lastTimeStamp = timeStamp;\n    this.tick(timeStamp);\n  }\n\n  tick(timeStamp) {\n    let elapsedTime = (timeStamp - this.lastTimeStamp) / 1000;\n    this.lastTimeStamp = timeStamp;\n\n    // If we're debugging and stopped at a breakpoint during the last frame, the\n    // elapsed time will be huge. If that happens, reset the clock. Same if we\n    // drop below 15 frames per second.\n    if (elapsedTime > maxTick) {\n      elapsedTime = maxTick;\n    }\n\n    this.update(elapsedTime);\n\n    // Perform the drawing operation\n    this.draw();\n\n    // The loop function has reached it's end. Keep requesting new frames\n    window.requestAnimationFrame(this.nextTick);\n  }\n}\n"],"names":["renderArea","document","getElementById","createCanvas","createElement","palette","Colors","[object Object]","volume","oldVolume","Chain","s","f","o","p","d","this","t","isStarted","isDone","parent","remainder","startValue","next","addAction","start","update","then","smoothStart2","smoothStart3","smoothStart4","smoothStart5","smoothStop3","smoothStop4","removeAll","array","predicate","last","kept","length","implementActionList","target","actions","updateActions","removeAction","isDirty","action","a","push","Sprite","dx","dy","context","x","y","name","getLayer","TextSprite","text","super","newText","fillText","endAngle","Math","PI","GamepadControlsSprite","scale","radius","ctx","beginPath","arc","fill","save","lineWidth","lineCap","fillStyle","background","moveTo","size","lineTo","width","rect","stroke","drawThumbStick","restore","strokeStyle","font","textAlign","KeyboardControlsSprite","keySize","keySpacing","height","r","c","strokeRect","drawKey","top","bottom","left","right","drawKeys","drawMouse","MouseState","canvas","addEventListener","onMouseDown","bind","onMouseMove","onMouseOut","onMouseUp","state","isMouseDown","isMouseOver","current","dragging","dragComplete","e","position","offsetX","clientWidth","offsetY","clientHeight","clientToCanvas","drop","log","updateCurrent","onMouseEvent","reset","begin","end","alreadyDown","becameDown","which","onBeginDrag","becameUp","onEndDrag","KEY_A","KEY_C","KEY_D","KEY_S","KEY_V","KEY_W","KEY_Y","KEY_Z","KeyState","window","onKeyDown","onKeyUp","newKeysDown","keysDown","newKeysUp","key","undefined","code","keyCode","metaKey","RenderLayer","layer","z","dom","id","style","getContext","objects","appendChild","isObjectListDirty","storedTransform","getTransform","setTransform","clearRect","object","updated","sort","b","clear","draw","removeChild","infoText","startText","Intro","enemies","player","titleEase","addObject","keys","mouse","gradient","createRadialGradient","addColorStop","obstacles","fillRect","yOffset","random","shadowBlur","shadowOffsetX","round","shadowOffsetY","shadowColor","centerX","centerY","i","n","savedFill","savedStroke","measureText","textHeight","isKeyDown","renderTitle","renderInfoText","renderNext","BoxSprite","Background","checkForBoundaryCollisions","collidesWithBoundary","explode","distance","SpawnSprite","enemy","floor","particles","Array","angle","duration","factor","countDown","cos","sin","addEnemy","removeObject","ParticleBlastSprite","innerRadius","outerRadius","diameter","speed","ttl","anyAlive","zzfxInit","zzfxX","AudioContext","q","k","u","F","v","w","A","l","B","G","m","C","h","H","I","D","Z","g","E","J","K","max","min","tan","abs","zzfxV","createBuffer","getChannelData","set","createBufferSource","buffer","connect","destination","zzfx","EnemySprite","_center","pointValue","exploded","incrementScore","removeEnemy","getPlayer","getHud","addScore","halfRepelAngle","twoPi","fixAngle","AsteroidSprite","originalRadius","hits","aabb","bounce","getBoundaryBox","atan2","AmmoDropSprite","acceleration","playerPosition","center","myPosition","incrementAmmo","addAmmo","sqr","distanceSquared","dummyObject","TimedEvent","callback","delay","enemyTypes","reverseSpeed","inRepelArc","deviation","angleFromPlayer","playerAngle","spinX","spinY","spiralRadiusEase","spiralAngleEase","spiralAngle","spinDirection","spiralGrowth","spiralShrink","spawnPatterns","randomInt","randomSelection","Simulation","spawnEvent","spawn","spawnTimer","checkForEnemyOnEnemyCollisions","T","xOffset","j","spawnEnemy","addCluster","offset","isCollision","angleAB","setDirection","collideAt","CircleSprite","BulletSprite","removeBullet","normalizer","sqrt","PlayerSprite","aim","lastAim","shoot","shootAction","ammo","shots","showCursor","isUsingGamepad","classList","remove","add","shoot1","shoot2","shoot3","inDeadZone","bullet","magnitude","addBullet","decrementAmmo","stepX","stepY","amount","score","gp","axes","keyInput","hideCursor","getMouse","startShooting","stopShooting","updateGuns","navigator","getGamepads","updateVelocity","aimUpdated","updateAim","Player","bullets","gameOver","checkForBulletCollisions","checkForEnemyCollisions","dead","absorb","Hud","scoreSprite","ammoSprite","value","sprite","moveOff","moveOn","setText","updateState","inTopRange","hideText","showText","GameOver","gameText","overText","message","highScore","buttons","pressed","world","gameIsStarted","gameIsOver","layers","intro","dispose","elapsed","resetLayers","addLayer","latestScore","hud","gameover","showMessage","nextTick","tick","firstTick","init","requestAnimationFrame","timeStamp","lastTimeStamp","elapsedTime"],"mappings":"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"}